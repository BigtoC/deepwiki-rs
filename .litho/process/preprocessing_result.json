{
  "project_structure": {
    "root_path": ".",
    "directories": [
      {
        "path": "./litho.docs",
        "name": "litho.docs",
        "file_count": 0,
        "subdirectory_count": 0,
        "total_size": 0,
        "importance_score": 0.0
      },
      {
        "path": "./assets",
        "name": "assets",
        "file_count": 5,
        "subdirectory_count": 0,
        "total_size": 396079,
        "importance_score": 0.0
      },
      {
        "path": "./src/tools",
        "name": "tools",
        "file_count": 5,
        "subdirectory_count": 0,
        "total_size": 67078,
        "importance_score": 0.0
      },
      {
        "path": "./src/llm",
        "name": "llm",
        "file_count": 3,
        "subdirectory_count": 0,
        "total_size": 3252,
        "importance_score": 0.0
      },
      {
        "path": "./src/cache",
        "name": "cache",
        "file_count": 1,
        "subdirectory_count": 0,
        "total_size": 4985,
        "importance_score": 0.0
      },
      {
        "path": "./src/agents",
        "name": "agents",
        "file_count": 4,
        "subdirectory_count": 0,
        "total_size": 106797,
        "importance_score": 0.0
      },
      {
        "path": "./src/utils",
        "name": "utils",
        "file_count": 4,
        "subdirectory_count": 0,
        "total_size": 14374,
        "importance_score": 0.0
      },
      {
        "path": "./src/workflow",
        "name": "workflow",
        "file_count": 1,
        "subdirectory_count": 0,
        "total_size": 11759,
        "importance_score": 0.0
      },
      {
        "path": "./src/extractors/language_processors",
        "name": "language_processors",
        "file_count": 10,
        "subdirectory_count": 0,
        "total_size": 45977,
        "importance_score": 0.2
      },
      {
        "path": "./src/extractors",
        "name": "extractors",
        "file_count": 8,
        "subdirectory_count": 1,
        "total_size": 77841,
        "importance_score": 0.2
      },
      {
        "path": "./src",
        "name": "src",
        "file_count": 5,
        "subdirectory_count": 7,
        "total_size": 16304,
        "importance_score": 0.5
      }
    ],
    "files": [
      {
        "path": "DOCUMENTATION_AGENT_REFACTOR_SUMMARY.md",
        "name": "DOCUMENTATION_AGENT_REFACTOR_SUMMARY.md",
        "size": 4426,
        "extension": "md",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757305916"
      },
      {
        "path": "Cargo.toml",
        "name": "Cargo.toml",
        "size": 1202,
        "extension": "toml",
        "is_core": false,
        "importance_score": 0.30000000000000004,
        "complexity_score": 0.0,
        "last_modified": "1757306130"
      },
      {
        "path": ".DS_Store",
        "name": ".DS_Store",
        "size": 6148,
        "extension": null,
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757303197"
      },
      {
        "path": "LICENSE",
        "name": "LICENSE",
        "size": 1063,
        "extension": null,
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "Cargo.lock",
        "name": "Cargo.lock",
        "size": 64258,
        "extension": "lock",
        "is_core": false,
        "importance_score": 0.05,
        "complexity_score": 0.0,
        "last_modified": "1757302408"
      },
      {
        "path": "RESEARCH_AGENT_REFACTOR.md",
        "name": "RESEARCH_AGENT_REFACTOR.md",
        "size": 4144,
        "extension": "md",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757303728"
      },
      {
        "path": "README.md",
        "name": "README.md",
        "size": 10488,
        "extension": "md",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757241685"
      },
      {
        "path": ".gitignore",
        "name": ".gitignore",
        "size": 835,
        "extension": null,
        "is_core": false,
        "importance_score": 0.0,
        "complexity_score": 0.0,
        "last_modified": "1757242459"
      },
      {
        "path": "README_zh.md",
        "name": "README_zh.md",
        "size": 8886,
        "extension": "md",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "如何使用rig框架开发LLM Agent和Extractor.md",
        "name": "如何使用rig框架开发LLM Agent和Extractor.md",
        "size": 15414,
        "extension": "md",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757298310"
      },
      {
        "path": "assets/design_litho_2.png",
        "name": "design_litho_2.png",
        "size": 43156,
        "extension": "png",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "assets/design_litho_1.png",
        "name": "design_litho_1.png",
        "size": 277106,
        "extension": "png",
        "is_core": false,
        "importance_score": 0.0,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "assets/.DS_Store",
        "name": ".DS_Store",
        "size": 6148,
        "extension": null,
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757298081"
      },
      {
        "path": "assets/icon_litho.png",
        "name": "icon_litho.png",
        "size": 24284,
        "extension": "png",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "assets/banner_litho.jpg",
        "name": "banner_litho.jpg",
        "size": 45385,
        "extension": "jpg",
        "is_core": false,
        "importance_score": 0.2,
        "complexity_score": 0.0,
        "last_modified": "1757215164"
      },
      {
        "path": "src/tools/architecture_detector.rs",
        "name": "architecture_detector.rs",
        "size": 19035,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757217586"
      },
      {
        "path": "src/tools/file_explorer.rs",
        "name": "file_explorer.rs",
        "size": 12269,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757218094"
      },
      {
        "path": "src/tools/dependency_analyzer.rs",
        "name": "dependency_analyzer.rs",
        "size": 16828,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757217555"
      },
      {
        "path": "src/tools/mod.rs",
        "name": "mod.rs",
        "size": 298,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757215907"
      },
      {
        "path": "src/tools/code_analyzer.rs",
        "name": "code_analyzer.rs",
        "size": 18648,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757217524"
      },
      {
        "path": "src/llm/types.rs",
        "name": "types.rs",
        "size": 584,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757217417"
      },
      {
        "path": "src/llm/client.rs",
        "name": "client.rs",
        "size": 2592,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757302363"
      },
      {
        "path": "src/llm/mod.rs",
        "name": "mod.rs",
        "size": 76,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757217402"
      },
      {
        "path": "src/.DS_Store",
        "name": ".DS_Store",
        "size": 6148,
        "extension": null,
        "is_core": false,
        "importance_score": 0.5,
        "complexity_score": 0.0,
        "last_modified": "1757242408"
      },
      {
        "path": "src/cache/mod.rs",
        "name": "mod.rs",
        "size": 4985,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757240579"
      },
      {
        "path": "src/config.rs",
        "name": "config.rs",
        "size": 5956,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.9000000000000001,
        "complexity_score": 0.0,
        "last_modified": "1757240283"
      },
      {
        "path": "src/lib.rs",
        "name": "lib.rs",
        "size": 327,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757217454"
      },
      {
        "path": "src/agents/preprocessing_agent.rs",
        "name": "preprocessing_agent.rs",
        "size": 40208,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757298952"
      },
      {
        "path": "src/agents/mod.rs",
        "name": "mod.rs",
        "size": 219,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757216293"
      },
      {
        "path": "src/agents/research_agent.rs",
        "name": "research_agent.rs",
        "size": 19756,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757303623"
      },
      {
        "path": "src/agents/documentation_agent.rs",
        "name": "documentation_agent.rs",
        "size": 46614,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757305712"
      },
      {
        "path": "src/utils/text_utils.rs",
        "name": "text_utils.rs",
        "size": 4550,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757216457"
      },
      {
        "path": "src/utils/mod.rs",
        "name": "mod.rs",
        "size": 137,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757216410"
      },
      {
        "path": "src/utils/file_utils.rs",
        "name": "file_utils.rs",
        "size": 3581,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757216432"
      },
      {
        "path": "src/utils/markdown_utils.rs",
        "name": "markdown_utils.rs",
        "size": 6106,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757216489"
      },
      {
        "path": "src/workflow/mod.rs",
        "name": "mod.rs",
        "size": 11759,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757240441"
      },
      {
        "path": "src/main.rs",
        "name": "main.rs",
        "size": 1231,
        "extension": "rs",
        "is_core": true,
        "importance_score": 1.0,
        "complexity_score": 0.0,
        "last_modified": "1757220812"
      },
      {
        "path": "src/extractors/component_extractor.rs",
        "name": "component_extractor.rs",
        "size": 22190,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757298034"
      },
      {
        "path": "src/extractors/ai_analysis_types.rs",
        "name": "ai_analysis_types.rs",
        "size": 4574,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757298531"
      },
      {
        "path": "src/extractors/ai_research_types.rs",
        "name": "ai_research_types.rs",
        "size": 2798,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757303411"
      },
      {
        "path": "src/extractors/research_extractor.rs",
        "name": "research_extractor.rs",
        "size": 7540,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757216535"
      },
      {
        "path": "src/extractors/mod.rs",
        "name": "mod.rs",
        "size": 679,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.6,
        "complexity_score": 0.0,
        "last_modified": "1757304721"
      },
      {
        "path": "src/extractors/documentation_extractor.rs",
        "name": "documentation_extractor.rs",
        "size": 14555,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757218194"
      },
      {
        "path": "src/extractors/language_processors/typescript.rs",
        "name": "typescript.rs",
        "size": 4619,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237804"
      },
      {
        "path": "src/extractors/language_processors/java.rs",
        "name": "java.rs",
        "size": 3608,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237102"
      },
      {
        "path": "src/extractors/language_processors/react.rs",
        "name": "react.rs",
        "size": 4988,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237737"
      },
      {
        "path": "src/extractors/language_processors/mod.rs",
        "name": "mod.rs",
        "size": 3089,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237930"
      },
      {
        "path": "src/extractors/language_processors/rust.rs",
        "name": "rust.rs",
        "size": 4514,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757236897"
      },
      {
        "path": "src/extractors/language_processors/vue.rs",
        "name": "vue.rs",
        "size": 5193,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237832"
      },
      {
        "path": "src/extractors/language_processors/javascript.rs",
        "name": "javascript.rs",
        "size": 5112,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237777"
      },
      {
        "path": "src/extractors/language_processors/kotlin.rs",
        "name": "kotlin.rs",
        "size": 5907,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237059"
      },
      {
        "path": "src/extractors/language_processors/python.rs",
        "name": "python.rs",
        "size": 3645,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237898"
      },
      {
        "path": "src/extractors/language_processors/svelte.rs",
        "name": "svelte.rs",
        "size": 5302,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757237874"
      },
      {
        "path": "src/extractors/ai_documentation_types.rs",
        "name": "ai_documentation_types.rs",
        "size": 8433,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757304672"
      },
      {
        "path": "src/extractors/structure_extractor.rs",
        "name": "structure_extractor.rs",
        "size": 17072,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757297932"
      },
      {
        "path": "src/cli.rs",
        "name": "cli.rs",
        "size": 2642,
        "extension": "rs",
        "is_core": true,
        "importance_score": 0.8,
        "complexity_score": 0.0,
        "last_modified": "1757239769"
      }
    ],
    "total_files": 56,
    "total_directories": 11,
    "file_types": {
      "toml": 1,
      "rs": 40,
      "md": 5,
      "png": 3,
      "lock": 1,
      "jpg": 1
    },
    "size_distribution": {
      "large": 1,
      "tiny": 8,
      "medium": 17,
      "small": 30
    }
  },
  "core_components": [
    {
      "name": "architecture_detector.rs",
      "file_path": "src/tools/architecture_detector.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "file_explorer.rs",
      "file_path": "src/tools/file_explorer.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::config::Config"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "dependency_analyzer.rs",
      "file_path": "src/tools/dependency_analyzer.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/tools/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "code_analyzer.rs",
      "file_path": "src/tools/code_analyzer.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "types.rs",
      "file_path": "src/llm/types.rs",
      "component_type": "rust_struct",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "client.rs",
      "file_path": "src/llm/client.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::config::LLMConfig"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/llm/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/cache/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.8,
      "dependencies": [
        "crate::config::CacheConfig"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "config.rs",
      "file_path": "src/config.rs",
      "component_type": "rust_struct",
      "importance_score": 0.9000000000000001,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "lib.rs",
      "file_path": "src/lib.rs",
      "component_type": "rust_library",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "preprocessing_agent.rs",
      "file_path": "src/agents/preprocessing_agent.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::llm::LLMClient",
        "crate::cache::CacheManager",
        "crate::config::Config"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/agents/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "research_agent.rs",
      "file_path": "src/agents/research_agent.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::llm::LLMClient",
        "crate::agents::preprocessing_agent::PreprocessingResult",
        "crate::cache::CacheManager",
        "crate::config::Config",
        "crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "documentation_agent.rs",
      "file_path": "src/agents/documentation_agent.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::llm::LLMClient",
        "crate::cache::CacheManager",
        "crate::config::Config",
        "crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult}",
        "crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis}",
        "crate::utils::FileUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils",
        "crate::utils::MarkdownUtils"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "text_utils.rs",
      "file_path": "src/utils/text_utils.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/utils/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "file_utils.rs",
      "file_path": "src/utils/file_utils.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "markdown_utils.rs",
      "file_path": "src/utils/markdown_utils.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/workflow/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.8,
      "dependencies": [
        "crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent}",
        "crate::agents::research_agent::ResearchResult",
        "crate::agents::documentation_agent::DocumentationResult",
        "crate::config::Config"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "main.rs",
      "file_path": "src/main.rs",
      "component_type": "rust_main",
      "importance_score": 1.0,
      "dependencies": [
        "mod::agents",
        "mod::cache",
        "mod::cli",
        "mod::config",
        "mod::extractors",
        "mod::llm",
        "mod::tools",
        "mod::utils",
        "mod::workflow"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "component_extractor.rs",
      "file_path": "src/extractors/component_extractor.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::cache::CacheManager",
        "crate::extractors::structure_extractor::{CoreComponent, ProjectStructure}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "ai_analysis_types.rs",
      "file_path": "src/extractors/ai_analysis_types.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "ai_research_types.rs",
      "file_path": "src/extractors/ai_research_types.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "research_extractor.rs",
      "file_path": "src/extractors/research_extractor.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::cache::CacheManager",
        "crate::agents::preprocessing_agent::PreprocessingResult"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/extractors/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.6,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "documentation_extractor.rs",
      "file_path": "src/extractors/documentation_extractor.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::cache::CacheManager",
        "crate::agents::preprocessing_agent::PreprocessingResult",
        "crate::extractors::research_extractor::ResearchReport",
        "crate::utils::MarkdownUtils"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "typescript.rs",
      "file_path": "src/extractors/language_processors/typescript.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "java.rs",
      "file_path": "src/extractors/language_processors/java.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "react.rs",
      "file_path": "src/extractors/language_processors/react.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "mod.rs",
      "file_path": "src/extractors/language_processors/mod.rs",
      "component_type": "rust_module",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "rust.rs",
      "file_path": "src/extractors/language_processors/rust.rs",
      "component_type": "rust_main",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "vue.rs",
      "file_path": "src/extractors/language_processors/vue.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "javascript.rs",
      "file_path": "src/extractors/language_processors/javascript.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "kotlin.rs",
      "file_path": "src/extractors/language_processors/kotlin.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "python.rs",
      "file_path": "src/extractors/language_processors/python.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "svelte.rs",
      "file_path": "src/extractors/language_processors/svelte.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "super::{Dependency, LanguageProcessor}"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "ai_documentation_types.rs",
      "file_path": "src/extractors/ai_documentation_types.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "structure_extractor.rs",
      "file_path": "src/extractors/structure_extractor.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::cache::CacheManager",
        "crate::extractors::language_processors::LanguageProcessorManager"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    },
    {
      "name": "cli.rs",
      "file_path": "src/cli.rs",
      "component_type": "rust_struct",
      "importance_score": 0.8,
      "dependencies": [
        "crate::config::Config"
      ],
      "description": null,
      "functions": [],
      "interfaces": []
    }
  ],
  "component_analyses": [
    {
      "component": {
        "name": "architecture_detector.rs",
        "file_path": "src/tools/architecture_detector.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "architecture_detector.rs是一个用于分析代码库架构的工具。它可以检测项目类型和技术栈，识别架构模式（如MVC、微服务等），分析组件类型和架构层次，检测设计原则（如单一职责原则），并生成架构建议和洞察。该工具使用异步编程进行高效的文件系统操作和分析。",
      "responsibilities": [
        "检测项目类型和技术栈",
        "识别架构模式（如MVC、微服务等）",
        "分析组件类型和架构层次",
        "检测设计原则（如单一职责原则）",
        "生成架构建议和洞察"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "project_root",
              "param_type": "PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "detect_patterns",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "&ArchitectureDetectorArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ArchitectureDetectorResult>",
          "description": null
        },
        {
          "name": "detect_project_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_config_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "tech_stack",
              "param_type": "&mut Vec<String>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "detect_languages_from_files",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "tech_stack",
              "param_type": "&mut Vec<String>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "detect_architecture_patterns",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "has_mvc_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "has_microservices_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "has_layered_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "has_modular_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "analyze_component_types",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_rust_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "components",
              "param_type": "&mut Vec<ComponentType>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_js_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "components",
              "param_type": "&mut Vec<ComponentType>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_python_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "components",
              "param_type": "&mut Vec<ComponentType>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_java_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "components",
              "param_type": "&mut Vec<ComponentType>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "analyze_architecture_layers",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "detect_design_principles",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "has_single_responsibility",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "has_dependency_injection",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "has_separation_of_concerns",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<bool>",
          "description": null
        },
        {
          "name": "generate_recommendations",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "generate_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut ArchitectureDetectorResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "execute",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "ArchitectureDetectorArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ArchitectureDetectorResult>",
          "description": null
        },
        {
          "name": "ArchitectureDetectorTool",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitectureDetectorArgs",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitecturePattern",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ComponentType",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitectureLayer",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitectureDetectorResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::HashMap;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 47.0,
        "lines_of_code": 526,
        "number_of_functions": 23,
        "number_of_classes": 6,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "size",
            "description": "文件过大",
            "suggestion": "考虑将文件拆分为多个模块",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "圈复杂度较高，部分函数需要拆分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更细化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数参数过多，可以考虑使用结构体封装",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将复杂函数拆分为更小的函数以降低圈复杂度",
        "增强错误处理的细化程度",
        "考虑使用结构体封装参数以减少函数参数数量",
        "添加更多的单元测试和集成测试",
        "考虑添加日志功能以便于调试和监控"
      ]
    },
    {
      "component": {
        "name": "file_explorer.rs",
        "file_path": "src/tools/file_explorer.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::config::Config"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "FileExplorerTool是一个用于分析项目文件结构的工具。它可以列出目录内容、查找文件、分析项目结构并生成见解。该工具使用异步操作处理文件系统遍历，并提供了文件重要性评分功能。主要功能包括列出目录、查找文件、分析项目结构、创建文件信息、计算文件重要性分数、生成见解等。",
      "responsibilities": [
        "文件系统遍历和分析",
        "文件信息收集和处理",
        "文件重要性评估",
        "项目结构分析",
        "文件搜索功能"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "project_root",
              "param_type": "PathBuf",
              "is_optional": false,
              "description": null
            },
            {
              "name": "config",
              "param_type": "Config",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "list_directory",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "&FileExplorerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileExplorerResult>",
          "description": null
        },
        {
          "name": "find_files",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "&FileExplorerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileExplorerResult>",
          "description": null
        },
        {
          "name": "analyze_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_args",
              "param_type": "&FileExplorerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileExplorerResult>",
          "description": null
        },
        {
          "name": "create_file_info",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileInfo>",
          "description": null
        },
        {
          "name": "calculate_importance_score",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "size",
              "param_type": "u64",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "f64",
          "description": null
        },
        {
          "name": "is_ignored",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "generate_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "files",
              "param_type": "&[FileInfo]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "directories",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_types",
              "param_type": "&HashMap<String",
              "is_optional": false,
              "description": null
            },
            {
              "name": "usize>",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_structure_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "files",
              "param_type": "&[FileInfo]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "directories",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_types",
              "param_type": "&HashMap<String",
              "is_optional": false,
              "description": null
            },
            {
              "name": "usize>",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_structure_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "files",
              "param_type": "&[FileInfo]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "directories",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_types",
              "param_type": "&HashMap<String",
              "is_optional": false,
              "description": null
            },
            {
              "name": "usize>",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "execute",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "FileExplorerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileExplorerResult>",
          "description": null
        },
        {
          "name": "FileExplorerTool",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "FileExplorerArgs",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "FileInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "FileExplorerResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::HashMap;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::{Path, PathBuf};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use walkdir::WalkDir;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 46.0,
        "lines_of_code": 379,
        "number_of_functions": 11,
        "number_of_classes": 4,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "高圈复杂度（46.0）",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数过于庞大",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更一致",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "文档不够全面",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将大函数拆分为更小的函数",
        "增加更全面的文档注释",
        "实现更一致的错误处理",
        "考虑添加并行处理以提高性能",
        "添加更多测试用例",
        "考虑实现缓存机制以提高重复操作的性能"
      ]
    },
    {
      "component": {
        "name": "dependency_analyzer.rs",
        "file_path": "src/tools/dependency_analyzer.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个功能全面的依赖分析工具，能够分析Rust、Python、JavaScript/TypeScript、Java等多种编程语言的依赖关系。它通过解析源代码文件，识别各种依赖类型（如use语句、import语句等），构建依赖图，检测循环依赖，并计算各种依赖指标。组件采用异步编程模式，提高了分析性能。",
      "responsibilities": [
        "分析多种编程语言的依赖关系",
        "构建依赖图",
        "检测循环依赖",
        "计算依赖指标",
        "生成依赖洞察"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "project_root",
              "param_type": "PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "analyze_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "&DependencyAnalyzerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DependencyAnalyzerResult>",
          "description": null
        },
        {
          "name": "discover_source_files",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<String>>",
          "description": null
        },
        {
          "name": "analyze_file_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            },
            {
              "name": "relative_path",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<Dependency>>",
          "description": null
        },
        {
          "name": "detect_language",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "analyze_rust_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "source_file",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&mut Vec<Dependency>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_python_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "source_file",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&mut Vec<Dependency>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_js_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "source_file",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&mut Vec<Dependency>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_java_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "source_file",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&mut Vec<Dependency>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "build_dependency_graph",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&[Dependency]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "HashMap<String, Vec<String>>",
          "description": null
        },
        {
          "name": "analyze_modules",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&[Dependency]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_paths",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<ModuleInfo>",
          "description": null
        },
        {
          "name": "find_circular_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "graph",
              "param_type": "&HashMap<String",
              "is_optional": false,
              "description": null
            },
            {
              "name": "Vec<String>>",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Vec<String>>",
          "description": null
        },
        {
          "name": "dfs_find_cycles",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "node",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "graph",
              "param_type": "&HashMap<String",
              "is_optional": false,
              "description": null
            },
            {
              "name": "Vec<String>>",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "visited",
              "param_type": "&mut HashSet<String>",
              "is_optional": false,
              "description": null
            },
            {
              "name": "rec_stack",
              "param_type": "&mut HashSet<String>",
              "is_optional": false,
              "description": null
            },
            {
              "name": "path",
              "param_type": "&mut Vec<String>",
              "is_optional": false,
              "description": null
            },
            {
              "name": "cycles",
              "param_type": "&mut Vec<Vec<String>>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "extract_external_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dependencies",
              "param_type": "&[Dependency]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "calculate_dependency_metrics",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&DependencyAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "HashMap<String, f64>",
          "description": null
        },
        {
          "name": "generate_dependency_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&DependencyAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "execute",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "DependencyAnalyzerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DependencyAnalyzerResult>",
          "description": null
        },
        {
          "name": "DependencyAnalyzerTool",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DependencyAnalyzerArgs",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "Dependency",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ModuleInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DependencyAnalyzerResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::{HashMap, HashSet};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 41.0,
        "lines_of_code": 447,
        "number_of_functions": 17,
        "number_of_classes": 5,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "高圈复杂度（41.0）需要拆分复杂函数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数过于庞大，需要拆分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更细化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏详细的模块级文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将复杂函数拆分为更小的单元",
        "增加详细的模块级文档注释",
        "实现更细化的错误处理",
        "考虑添加缓存机制提高性能",
        "增加单元测试覆盖率",
        "考虑使用更轻量级的异步运行时"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/tools/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该模块主要负责导出四个核心工具模块的公共接口。它通过pub mod语句声明了四个子模块，并通过pub use语句将每个子模块的主要工具结构体导出。这种模块组织方式使得其他模块可以方便地访问和使用这些工具。",
      "responsibilities": [
        "导出文件资源管理工具",
        "导出代码分析工具",
        "导出依赖分析工具",
        "导出架构检测工具"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 9,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.9,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的模块文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用更具体的导出名称",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "可以添加更详细的模块文档注释",
        "可以考虑使用更具体的导出名称",
        "可以添加模块级别的测试用例"
      ]
    },
    {
      "component": {
        "name": "code_analyzer.rs",
        "file_path": "src/tools/code_analyzer.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "CodeAnalyzerTool是一个用于分析代码文件的工具，支持多种编程语言（如Rust、Python、JavaScript/TypeScript、Java等）。它可以提取代码的基本度量指标（如代码行数、注释行数），并根据文件类型分析代码结构，如函数、类、导入等。该工具使用异步操作来提高性能，并使用正则表达式进行代码解析。它的主要功能包括检测编程语言、分析基本度量指标、分析特定语言的代码结构，并生成代码洞察。",
      "responsibilities": [
        "分析代码文件并提取基本度量指标",
        "根据文件扩展名或提示检测编程语言",
        "分析不同编程语言的代码结构（如函数、类、导入等）",
        "生成代码洞察和分析结果"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "project_root",
              "param_type": "PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "analyze_file",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "&CodeAnalyzerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<CodeAnalyzerResult>",
          "description": null
        },
        {
          "name": "detect_language",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "hint",
              "param_type": "Option<&str>",
              "is_optional": true,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "analyze_basic_metrics",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_rust_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_python_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_js_ts_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_java_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_generic_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "extract_js_function_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<String>",
          "description": null
        },
        {
          "name": "generate_code_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "result",
              "param_type": "&mut CodeAnalyzerResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "execute",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "args",
              "param_type": "CodeAnalyzerArgs",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<CodeAnalyzerResult>",
          "description": null
        },
        {
          "name": "CodeAnalyzerTool",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CodeAnalyzerArgs",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "FunctionInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ClassInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ImportInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CodeAnalyzerResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::HashMap;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::{Path, PathBuf};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 51.0,
        "lines_of_code": 497,
        "number_of_functions": 12,
        "number_of_classes": 6,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "高圈复杂度（51.0）",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数实现过于简化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少详细的错误处理和异常管理",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码注释不足",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分正则表达式可能需要优化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "优化高圈复杂度的函数",
        "增强错误处理和异常管理",
        "添加更多详细的代码注释",
        "优化正则表达式以提高解析准确性",
        "考虑将部分功能拆分为更小的模块以提高可维护性",
        "添加单元测试以确保功能的正确性",
        "考虑使用更轻量级的依赖或减少依赖数量"
      ]
    },
    {
      "component": {
        "name": "types.rs",
        "file_path": "src/llm/types.rs",
        "component_type": "rust_struct",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件定义了与聊天功能相关的数据结构和类型。它包含了三个主要的结构体：ChatMessage、ChatRequest和ChatResponse。ChatMessage结构体表示一个聊天消息，包含角色和内容两个字段。ChatRequest结构体表示一个聊天请求，包含模型、消息列表、最大令牌数和温度等字段。ChatResponse结构体表示一个聊天响应，包含一个选择列表。每个选择包含一个响应消息，响应消息包含内容字段。",
      "responsibilities": [
        "定义聊天消息的数据结构。",
        "定义聊天请求的数据结构。",
        "定义聊天响应的数据结构。",
        "提供数据序列化和反序列化支持。"
      ],
      "interfaces": [
        {
          "name": "ChatMessage",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ChatRequest",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ChatResponse",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "Choice",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ResponseMessage",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 30,
        "number_of_functions": 0,
        "number_of_classes": 5,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.9,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释，特别是对于每个字段的用途和含义。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用枚举类型来替代字符串类型的role字段，以提高类型安全性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试来验证数据结构的序列化和反序列化过程。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更多的文档注释，特别是对于每个字段的用途和含义。",
        "考虑使用枚举类型来替代字符串类型的role字段，以提高类型安全性。",
        "添加更多的单元测试来验证数据结构的序列化和反序列化过程。",
        "考虑添加更多的验证逻辑，例如检查消息内容的长度和格式。"
      ]
    },
    {
      "component": {
        "name": "client.rs",
        "file_path": "src/llm/client.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::config::LLMConfig"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "LLMClient 组件是一个用于与大型语言模型（LLM）进行交互的异步客户端。它封装了与LLM服务的通信细节，提供了简单的接口给上层应用。组件的核心功能包括提示处理、提取操作和错误处理。提示处理涉及将系统提示和用户提示组合起来，并发送给LLM服务。提取操作则是从LLM服务的响应中提取特定的数据结构。错误处理则是确保操作的可靠性，特别是在网络不稳定或服务不可用的情况下。组件使用了异步编程模式，以提高性能和响应能力。它还使用了错误处理库anyhow，以简化错误处理逻辑。配置参数通过LLMConfig对象进行管理和使用，使得配置更加灵活和方便。",
      "responsibilities": [
        "与大型语言模型（LLM）进行交互，处理提示和提取操作。",
        "处理异步操作的重试逻辑，确保操作的可靠性。",
        "管理和配置LLM客户端，包括模型选择、提示设置和参数配置。",
        "处理和转换错误，确保错误信息的准确性和有用性。",
        "封装LLM服务的复杂性，提供简单的接口给上层应用。"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "config",
              "param_type": "LLMConfig",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "system_prompt",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "user_prompt",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "LLMClient",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use rig::{",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use schemars::JsonSchema;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::future::Future;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::LLMConfig;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 3.0,
        "lines_of_code": 87,
        "number_of_functions": 4,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的文档注释，特别是关于重试逻辑和配置参数的使用。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将重试逻辑抽象为一个独立的trait或trait实现，以便于复用和测试。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的日志记录，特别是在生产环境中，以便于调试和监控。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用更具体的错误类型，而不是使用anyhow::Error，以便于错误处理和恢复。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用更现代的异步编程模式，例如async/await的更高级用法，以便于代码的可读性和维护性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更详细的文档注释，特别是关于重试逻辑和配置参数的使用。",
        "将重试逻辑抽象为一个独立的trait或trait实现，以便于复用和测试。",
        "添加更多的日志记录，特别是在生产环境中，以便于调试和监控。",
        "使用更具体的错误类型，而不是使用anyhow::Error，以便于错误处理和恢复。",
        "使用更现代的异步编程模式，例如async/await的更高级用法，以便于代码的可读性和维护性。",
        "添加单元测试和集成测试，以确保组件的正确性和稳定性。",
        "考虑使用更轻量级的异步运行时，例如async-std，以减少依赖和提高性能。",
        "考虑使用更现代的配置管理库，例如config，以便于配置的管理和使用。"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/llm/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个Rust模块文件，主要负责导出和组织LLM相关的子模块。它导出了client模块中的LLMClient结构体，以及types模块中的所有内容。这个模块的作用是为LLM相关的功能提供一个清晰的接口，使得其他模块可以方便地使用这些功能。",
      "responsibilities": [
        "导出LLMClient模块",
        "导出types模块中的所有内容",
        "组织和暴露LLM相关的模块"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 5,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的模块文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "考虑添加错误处理机制",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑添加更详细的模块文档注释，以便更好地理解模块的用途和功能",
        "虽然当前代码简单，但可以考虑添加错误处理机制，以应对未来可能的扩展和复杂性增加"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/cache/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.8,
        "dependencies": [
          "crate::config::CacheConfig"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件实现了一个缓存管理系统，主要功能包括初始化缓存目录、生成prompt的MD5哈希、获取和设置缓存、清除缓存以及获取缓存统计信息。组件使用了异步操作来处理文件系统的读写，并使用了泛型来支持不同类型的缓存数据。错误处理使用了anyhow库，提供了简洁的错误处理机制。",
      "responsibilities": [
        "缓存管理",
        "异步操作处理",
        "错误处理和异常管理",
        "缓存统计信息获取"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "config",
              "param_type": "CacheConfig",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "init",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "hash_prompt",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "prompt",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "get_cache_path",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "category",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "hash",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "PathBuf",
          "description": null
        },
        {
          "name": "is_expired",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "timestamp",
              "param_type": "u64",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "clear_category",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "category",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "clear_all",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "get_stats",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<CacheStats>",
          "description": null
        },
        {
          "name": "CacheManager",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CacheEntry",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CacheStats",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CategoryStats",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use md5::{Digest, Md5};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::{SystemTime, UNIX_EPOCH};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use tokio::fs;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::CacheConfig;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 13.0,
        "lines_of_code": 186,
        "number_of_functions": 10,
        "number_of_classes": 4,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更详细",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以优化异步操作的错误处理",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加更详细的错误处理",
        "添加更多的文档注释",
        "优化异步操作的错误处理",
        "考虑添加缓存大小限制"
      ]
    },
    {
      "component": {
        "name": "config.rs",
        "file_path": "src/config.rs",
        "component_type": "rust_struct",
        "importance_score": 0.9000000000000001,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件定义了一个Config结构体，用于管理应用程序的配置。它包含了项目名称、路径、文档格式、分析选项、文件大小限制等配置选项。此外，它还包含了LLMConfig和CacheConfig结构体，用于管理LLM模型和缓存的配置。该组件提供了从文件加载配置的方法，以及获取内部工作目录子路径的方法。它还定义了默认配置值。",
      "responsibilities": [
        "管理应用程序配置",
        "处理配置文件的读取和解析",
        "提供配置相关的辅助方法",
        "定义默认配置值",
        "管理LLM和缓存配置"
      ],
      "interfaces": [
        {
          "name": "from_file",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "get_internal_path",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "subdir",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "PathBuf",
          "description": null
        },
        {
          "name": "get_process_data_path",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "PathBuf",
          "description": null
        },
        {
          "name": "get_temp_path",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "PathBuf",
          "description": null
        },
        {
          "name": "default",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "default",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "default",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "Config",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "LLMConfig",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CacheConfig",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::{Context, Result};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::fs::File;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::io::Read;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 4.0,
        "lines_of_code": 223,
        "number_of_functions": 7,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.9,
        "maintainability": 0.9,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更多的文档注释",
        "添加更多的单元测试",
        "考虑使用更通用的错误处理机制",
        "考虑使用更通用的配置加载机制"
      ]
    },
    {
      "component": {
        "name": "lib.rs",
        "file_path": "src/lib.rs",
        "component_type": "rust_library",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个Rust库的核心模块，主要负责组织和管理系统的各个子模块。它通过声明多个内部模块（如config、cli、agents等）来定义系统的主要功能单元。组件通过重新导出各个模块的关键类型和函数，提供了一个统一的公共接口，使得上层应用可以方便地访问和使用这些功能。",
      "responsibilities": [
        "组织和管理系统的各个子模块",
        "提供统一的公共接口",
        "重新导出和集中管理各个模块的功能",
        "定义系统的主要功能单元",
        "维护模块间的关系和依赖"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 14,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.9,
        "maintainability": 0.9,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑添加更详细的模块文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑添加更多的公共接口以增强模块的可用性",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "可以考虑添加更详细的模块文档注释，以便更好地理解各个模块的功能和用途",
        "可以考虑添加更多的公共接口，以增强模块的可用性和灵活性",
        "可以考虑添加单元测试，以确保各个模块的功能正确性"
      ]
    },
    {
      "component": {
        "name": "preprocessing_agent.rs",
        "file_path": "src/agents/preprocessing_agent.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::llm::LLMClient",
          "crate::cache::CacheManager",
          "crate::config::Config"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是项目预处理和架构分析的核心组件。它主要负责提取项目结构、识别核心组件、使用AI进行组件分析、分析组件关系以及生成架构洞察。组件通过多个异步方法实现其功能，并使用缓存机制优化性能。它依赖多个内部模块如LLMClient、CacheManager等，以及外部的LLM服务。",
      "responsibilities": [
        "项目结构提取和分析",
        "核心组件识别",
        "AI增强的组件分析",
        "组件关系分析",
        "架构洞察生成"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "config",
              "param_type": "Config",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "preprocess",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<PreprocessingResult>",
          "description": null
        },
        {
          "name": "analyze_components_with_ai",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<ComponentAnalysis>>",
          "description": null
        },
        {
          "name": "enhance_component_analysis_with_ai",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "analysis",
              "param_type": "&ComponentAnalysis",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ComponentAnalysis>",
          "description": null
        },
        {
          "name": "build_component_analysis_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "analysis",
              "param_type": "&ComponentAnalysis",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "read_component_source_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "analysis",
              "param_type": "&ComponentAnalysis",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "read_dependency_source_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "analysis",
              "param_type": "&ComponentAnalysis",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "find_dependency_file",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dep_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<std::path::PathBuf>",
          "description": null
        },
        {
          "name": "recursive_find_file",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<std::path::PathBuf>",
          "description": null
        },
        {
          "name": "search_directory",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "dir",
              "param_type": "&std",
              "is_optional": false,
              "description": null
            },
            {
              "name": "target_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "extensions",
              "param_type": "&[&str]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<std::path::PathBuf>",
          "description": null
        },
        {
          "name": "truncate_source_code",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&std",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "max_length",
              "param_type": "usize",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&std",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "merge_ai_analysis_results",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_analysis",
              "param_type": "&AIComponentAnalysis",
              "is_optional": false,
              "description": null
            },
            {
              "name": "analysis",
              "param_type": "&mut ComponentAnalysis",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "analyze_relationships",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<RelationshipInfo>>",
          "description": null
        },
        {
          "name": "analyze_static_relationships",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<RelationshipInfo>>",
          "description": null
        },
        {
          "name": "analyze_relationships_with_ai",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "static_relationships",
              "param_type": "&[RelationshipInfo]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<RelationshipInfo>>",
          "description": null
        },
        {
          "name": "build_relationship_analysis_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "static_relationships",
              "param_type": "&[RelationshipInfo]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_architecture_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<String>>",
          "description": null
        },
        {
          "name": "build_architecture_analysis_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "component_analyses",
              "param_type": "&[ComponentAnalysis]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "build_project_summary_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            },
            {
              "name": "core_components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "component_analyses",
              "param_type": "&[ComponentAnalysis]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "PreprocessingAgent",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "PreprocessingResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "RelationshipInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use crate::llm::LLMClient;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::Instant;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::{",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::tools::{",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::fs;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 65.0,
        "lines_of_code": 1095,
        "number_of_functions": 21,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "size",
            "description": "文件过大",
            "suggestion": "考虑将文件拆分为多个模块",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码行数过多，建议拆分成更小的模块",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数的圈复杂度较高",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少详细的模块级注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将大型函数拆分为更小的、更专注的函数",
        "降低圈复杂度",
        "添加更详细的模块级注释",
        "考虑将对LLMClient的依赖抽象化以提高灵活性",
        "考虑将某些功能模块化以减少耦合"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/agents/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该模块主要负责导出三个子模块：预处理代理、研究代理和文档代理。每个子模块都通过pub use语句导出其主要结构。这使得模块的结构非常清晰，每个子模块都有明确的职责。",
      "responsibilities": [
        "导出预处理代理模块",
        "导出研究代理模块",
        "导出文档代理模块"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 7,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的模块文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "考虑添加模块级别的测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "为每个导出的模块添加详细的文档注释",
        "考虑添加模块级别的测试以确保导出的结构正确",
        "监控被导出模块的依赖关系以确保整体架构的健壮性"
      ]
    },
    {
      "component": {
        "name": "research_agent.rs",
        "file_path": "src/agents/research_agent.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::llm::LLMClient",
          "crate::agents::preprocessing_agent::PreprocessingResult",
          "crate::cache::CacheManager",
          "crate::config::Config",
          "crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "ResearchAgent 组件是一个复杂的研究分析引擎，主要负责处理和增强研究数据。它通过多个步骤生成研究报告，包括生成基础报告、使用AI增强报告内容、生成综合洞察和建议，以及生成研究摘要。组件使用异步编程来处理这些操作，并实现了缓存机制来提高性能。它还利用外部AI服务进行深度分析，生成结构化的研究结果。",
      "responsibilities": [
        "处理异步研究操作",
        "增强研究报告内容",
        "生成综合洞察和建议",
        "管理研究缓存",
        "生成研究摘要"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "config",
              "param_type": "Config",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "generate_research",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchResult>",
          "description": null
        },
        {
          "name": "enhance_report_with_ai",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "report",
              "param_type": "&ResearchReport",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchReport>",
          "description": null
        },
        {
          "name": "build_research_enhancement_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "report",
              "param_type": "&ResearchReport",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "merge_ai_enhancement_results",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "report",
              "param_type": "&ResearchReport",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_enhancement",
              "param_type": "&AIResearchEnhancement",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "ResearchReport",
          "description": null
        },
        {
          "name": "generate_comprehensive_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<String>>",
          "description": null
        },
        {
          "name": "build_comprehensive_insights_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_insights",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_recommendations",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<String>>",
          "description": null
        },
        {
          "name": "build_recommendations_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_recommendations",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_research_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "insights",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "recommendations",
              "param_type": "&[String]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "ResearchAgent",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ResearchResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use crate::llm::LLMClient;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::Instant;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::preprocessing_agent::PreprocessingResult;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 27.0,
        "lines_of_code": 595,
        "number_of_functions": 12,
        "number_of_classes": 2,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "size",
            "description": "文件过大",
            "suggestion": "考虑将文件拆分为多个模块",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "函数过长，部分函数如 generate_research 应该拆分为更小的单元",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏详细的模块注释和文档",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更细化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏单元测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分逻辑可以提取为独立的模块或函数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将长函数拆分为更小的单元",
        "添加详细的模块注释和文档",
        "实现更细化的错误处理",
        "添加单元测试",
        "提取重复逻辑为独立函数",
        "考虑实现更健壮的缓存管理机制",
        "评估对 LLMClient 的依赖，考虑性能优化"
      ]
    },
    {
      "component": {
        "name": "documentation_agent.rs",
        "file_path": "src/agents/documentation_agent.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::llm::LLMClient",
          "crate::cache::CacheManager",
          "crate::config::Config",
          "crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult}",
          "crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis}",
          "crate::utils::FileUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils",
          "crate::utils::MarkdownUtils"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "DocumentationAgent是一个负责生成和增强文档的核心组件。它通过DocumentationExtractor生成基础文档，使用LLMClient进行AI增强，并通过CacheManager进行缓存管理。该组件可以生成多种类型的文档，包括基础文档、C4架构文档、测试指南、性能分析、安全分析等。它还负责将生成的文档保存到文件系统，并生成文档摘要。",
      "responsibilities": [
        "文档生成",
        "AI增强文档内容",
        "专业文档生成",
        "文档保存和管理",
        "文档摘要生成"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "config",
              "param_type": "Config",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "generate_documentation",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentationResult>",
          "description": null
        },
        {
          "name": "enhance_document_with_ai",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "document",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "build_documentation_enhancement_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "document",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "apply_ai_enhancement_results",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "document",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_enhancement",
              "param_type": "&AIDocumentEnhancement",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "crate::extractors::documentation_extractor::DocumentInfo",
          "description": null
        },
        {
          "name": "build_technical_specification_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_technical_specification_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_spec",
              "param_type": "&AITechnicalSpecification",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_technical_specification",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_professional_documents",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<crate::extractors::documentation_extractor::DocumentInfo>>",
          "description": null
        },
        {
          "name": "generate_technical_specification",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_testing_guide",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_performance_analysis",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_security_analysis",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "save_documents",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "documents",
              "param_type": "&[Document]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "generate_documentation_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "documents",
              "param_type": "&[Document]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_c4_documentation",
              "param_type": "&C4Documentation",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "build_testing_guide_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_testing_guide_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_guide",
              "param_type": "&AITestingGuide",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_testing_guide",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "build_performance_analysis_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_performance_analysis_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_analysis",
              "param_type": "&AIPerformanceAnalysis",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_performance_analysis",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "build_security_analysis_prompt",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_security_analysis_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ai_analysis",
              "param_type": "&AISecurityAnalysis",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_basic_security_analysis",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<crate::extractors::documentation_extractor::DocumentInfo>",
          "description": null
        },
        {
          "name": "DocumentationAgent",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DocumentationResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "Document",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::llm::LLMClient;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::Instant;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::FileUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 69.0,
        "lines_of_code": 1163,
        "number_of_functions": 24,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "size",
            "description": "文件过大",
            "suggestion": "考虑将文件拆分为多个模块",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "函数过长，需要拆分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更全面",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少详细的模块注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以增加更多单元测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "拆分过长的函数以提高可维护性",
        "增强错误处理以应对更多异常情况",
        "添加详细的模块注释以提高代码可读性",
        "增加单元测试以提高代码可靠性",
        "优化对LLMClient的调用以提高性能",
        "考虑缓存策略以优化缓存管理"
      ]
    },
    {
      "component": {
        "name": "text_utils.rs",
        "file_path": "src/utils/text_utils.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "text_utils.rs是一个专门用于文本处理和分析的工具模块。它提供了多种文本处理功能，包括文本截断、清理、代码块提取、文本相似度计算、关键词提取、摘要生成、代码格式化以及Markdown特殊字符转义等。该模块使用Rust语言实现，采用结构化编程方式，通过TextUtils结构体和其实现的方法来组织代码。每个方法都专注于完成一个特定的文本处理任务，确保了代码的模块化和可维护性。",
      "responsibilities": [
        "文本格式化和清理",
        "文本内容提取和分析",
        "文本相似度计算",
        "文本摘要生成",
        "代码块处理和格式化"
      ],
      "interfaces": [
        {
          "name": "truncate",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "max_length",
              "param_type": "usize",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "clean_text",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "extract_code_blocks",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "similarity",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text1",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "text2",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "f64",
          "description": null
        },
        {
          "name": "extract_keywords",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "max_keywords",
              "param_type": "usize",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_summary",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "max_sentences",
              "param_type": "usize",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "format_code_snippet",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "code",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "language",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "escape_markdown",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "calculate_complexity_score",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "f64",
          "description": null
        },
        {
          "name": "TextUtils",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 12.0,
        "lines_of_code": 137,
        "number_of_functions": 9,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码复杂度较高，圈复杂度为12.0",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数（如extract_code_blocks）的逻辑可以进一步简化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏错误处理和输入验证",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "文档注释不够详细，缺少参数和返回值的说明",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加错误处理和输入验证",
        "优化extract_code_blocks函数的逻辑",
        "增加更详细的文档注释",
        "考虑将部分功能拆分为独立的模块",
        "增加单元测试覆盖所有功能",
        "考虑使用更高效的数据结构和算法",
        "添加性能优化，特别是对于大文本处理"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/utils/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个Rust模块文件，主要负责组织和导出三个子模块的功能：file_utils、text_utils和markdown_utils。它通过pub mod声明来包含这些子模块，并通过pub use语句将子模块的所有公共项重新导出。这种设计模式允许其他模块通过简单的路径导入来访问这些工具功能，而无需知道具体的子模块结构。",
      "responsibilities": [
        "组织和管理工具模块的结构",
        "提供统一的接口来导出子模块的功能",
        "维护模块之间的边界和职责分离"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 7,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.9,
        "maintainability": 0.9,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑添加模块级别的文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑添加单元测试来验证模块的导出功能",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑为每个pub use语句添加更具体的导出项，而不是使用通配符",
        "可以考虑添加模块级别的文档注释，以便更好地记录模块的用途和使用方式",
        "可以考虑添加单元测试来验证模块的导出功能",
        "可以考虑添加更详细的错误处理机制，特别是在模块初始化或导入过程中"
      ]
    },
    {
      "component": {
        "name": "file_utils.rs",
        "file_path": "src/utils/file_utils.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件提供了文件系统操作的抽象层，包含文件创建、读写、路径处理等功能。它支持异步操作，并提供了文件类型识别、文件名清理和唯一文件名生成等实用功能。组件采用模块化设计，每个函数有明确的单一职责。",
      "responsibilities": [
        "文件系统操作抽象",
        "文件类型识别",
        "文件路径处理",
        "文件内容安全读写",
        "文件名生成和清理"
      ],
      "interfaces": [
        {
          "name": "ensure_dir_exists",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "write_file_safe",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "read_file_safe",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "get_extension",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<String>",
          "description": null
        },
        {
          "name": "is_source_file",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "is_config_file",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "is_doc_file",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "categorize_file_size",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "size",
              "param_type": "u64",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "get_relative_path",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "base",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "PathBuf",
          "description": null
        },
        {
          "name": "sanitize_filename",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_unique_filename",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "dir",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "base_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "extension",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "FileUtils",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::{Path, PathBuf};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use tokio::fs;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 12.0,
        "lines_of_code": 122,
        "number_of_functions": 11,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更细粒度",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数可以拆分为更小的单元",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加更详细的文档注释",
        "为错误处理添加更具体的错误类型",
        "考虑将文件类型识别功能扩展为可配置的规则系统",
        "添加单元测试覆盖更多边界情况",
        "考虑添加同步版本的API以支持不同使用场景"
      ]
    },
    {
      "component": {
        "name": "markdown_utils.rs",
        "file_path": "src/utils/markdown_utils.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个功能全面的Markdown工具集，提供了生成各种Markdown元素的方法，包括标题、代码块、表格、列表、链接、图片、引用块、水平分隔线等基本元素，以及更高级的功能如目录生成、徽章创建、折叠区域、警告框、Mermaid图表和流程图支持。组件还提供了文档生成功能，可以创建完整的Markdown文档，包括标题、内容、时间戳和页脚。此外，还提供了特殊字符转义功能，确保Markdown内容的正确显示。",
      "responsibilities": [
        "生成各种Markdown元素",
        "处理Markdown内容格式化",
        "创建完整的Markdown文档",
        "提供Markdown特殊功能支持"
      ],
      "interfaces": [
        {
          "name": "heading",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "level",
              "param_type": "usize",
              "is_optional": false,
              "description": null
            },
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "code_block",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "code",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "language",
              "param_type": "Option<&str>",
              "is_optional": true,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "table",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "headers",
              "param_type": "&[&str]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "rows",
              "param_type": "&[Vec<&str>]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "list",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "items",
              "param_type": "&[&str]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "ordered",
              "param_type": "bool",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "link",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "url",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "image",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "alt_text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "url",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "blockquote",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "horizontal_rule",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "String",
          "description": null
        },
        {
          "name": "bold",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "italic",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "inline_code",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "code",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "badge",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "label",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "message",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "color",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "collapsible",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "summary",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "alert",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "alert_type",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "document",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "title",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "escape",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "text",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "mermaid_diagram",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "diagram_type",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "MarkdownUtils",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 11.0,
        "lines_of_code": 214,
        "number_of_functions": 19,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码复用性可以提高",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理不足",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加错误处理机制",
        "提高代码复用性",
        "添加更多文档注释",
        "考虑添加外部依赖以扩展功能"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/workflow/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.8,
        "dependencies": [
          "crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent}",
          "crate::agents::research_agent::ResearchResult",
          "crate::agents::documentation_agent::DocumentationResult",
          "crate::config::Config"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个工作流引擎，负责协调和执行整个工作流程。它通过多个阶段完成其任务：首先初始化工作流引擎，然后执行完整的工作流，包括项目预处理、调研文档生成和最终知识库文档生成。该组件还负责准备输出目录，保存结果，并生成工作流摘要。它使用异步编程模式，并与多个代理交互以完成其任务。",
      "responsibilities": [
        "协调和执行整个工作流程",
        "管理工作流的各个阶段和时间",
        "处理和保存工作流的结果",
        "与其他代理（PreprocessingAgent、ResearchAgent、DocumentationAgent）交互",
        "管理输出目录和文件"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "config",
              "param_type": "Config",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Self>",
          "description": null
        },
        {
          "name": "execute",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&mut self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<WorkflowResult>",
          "description": null
        },
        {
          "name": "prepare_output_directories",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "save_results",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "documentation_result",
              "param_type": "&DocumentationResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<()>",
          "description": null
        },
        {
          "name": "generate_workflow_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "documentation_result",
              "param_type": "&DocumentationResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "generate_markdown_summary",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&crate",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_result",
              "param_type": "&ResearchResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "documentation_result",
              "param_type": "&DocumentationResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "WorkflowEngine",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "WorkflowResult",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "StageTimings",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::Instant;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::research_agent::ResearchResult;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::documentation_agent::DocumentationResult;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use tokio::fs;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use tokio::fs;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 9.0,
        "lines_of_code": 302,
        "number_of_functions": 6,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码注释不足，特别是对于复杂的业务逻辑部分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更细化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "某些函数过于庞大，可以拆分为更小的单元",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏单元测试和集成测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加更多的代码注释，特别是对于复杂的业务逻辑部分",
        "实现更细化的错误处理",
        "将某些大函数拆分为更小的单元",
        "添加单元测试和集成测试",
        "考虑使用依赖注入来减少对代理的直接依赖",
        "实现更健壮的配置验证"
      ]
    },
    {
      "component": {
        "name": "main.rs",
        "file_path": "src/main.rs",
        "component_type": "rust_main",
        "importance_score": 1.0,
        "dependencies": [
          "mod::agents",
          "mod::cache",
          "mod::cli",
          "mod::config",
          "mod::extractors",
          "mod::llm",
          "mod::tools",
          "mod::utils",
          "mod::workflow"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是应用程序的主入口点，负责初始化和协调整个应用程序的执行流程。它首先解析命令行参数，然后创建配置对象，接着初始化工作流引擎，最后执行工作流并处理结果。该组件还负责记录应用程序的执行时间和生成统计信息。",
      "responsibilities": [
        "作为应用程序的入口点",
        "解析命令行参数并创建配置",
        "初始化和协调工作流引擎",
        "执行主要的业务逻辑并处理结果",
        "管理应用程序的生命周期和资源"
      ],
      "interfaces": [
        {
          "name": "main",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [],
          "return_type": "Result<()>",
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use clap::Parser;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::time::Instant;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use cli::Cli;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use workflow::WorkflowEngine;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 48,
        "number_of_functions": 1,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.9,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的错误处理和日志记录",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将配置创建逻辑封装到单独的函数中",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的注释和文档",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "可以考虑将配置创建逻辑封装到单独的函数中",
        "可以添加更详细的错误处理和日志记录",
        "可以添加更多的注释和文档以便于维护",
        "可以考虑将工作流引擎的初始化和执行逻辑拆分为更小的函数以提高可读性"
      ]
    },
    {
      "component": {
        "name": "component_extractor.rs",
        "file_path": "src/extractors/component_extractor.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::cache::CacheManager",
          "crate::extractors::structure_extractor::{CoreComponent, ProjectStructure}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "ComponentExtractor 组件是一个功能强大的代码分析工具，主要负责从各种编程语言的源代码中提取接口信息、分析组件依赖关系、计算代码复杂度指标、评估代码质量并生成改进建议。该组件支持多种编程语言，包括Rust、Python、JavaScript/TypeScript和Java。它使用异步操作来提高性能，并通过缓存机制优化重复分析。组件通过正则表达式和语言特定的解析逻辑来提取接口信息，并计算各种代码质量指标。",
      "responsibilities": [
        "从源代码中提取接口信息",
        "分析组件的依赖关系",
        "计算代码复杂度指标",
        "评估代码质量",
        "生成改进建议"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "cache_manager",
              "param_type": "CacheManager",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "analyze_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "components",
              "param_type": "&[CoreComponent]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<ComponentAnalysis>>",
          "description": null
        },
        {
          "name": "analyze_component",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "component",
              "param_type": "&CoreComponent",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ComponentAnalysis>",
          "description": null
        },
        {
          "name": "analyze_component_impl",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "component",
              "param_type": "&CoreComponent",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ComponentAnalysis>",
          "description": null
        },
        {
          "name": "extract_interfaces",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<InterfaceInfo>>",
          "description": null
        },
        {
          "name": "extract_rust_interfaces",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "interfaces",
              "param_type": "&mut Vec<InterfaceInfo>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "extract_python_interfaces",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "interfaces",
              "param_type": "&mut Vec<InterfaceInfo>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "extract_js_interfaces",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "interfaces",
              "param_type": "&mut Vec<InterfaceInfo>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "extract_java_interfaces",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "interfaces",
              "param_type": "&mut Vec<InterfaceInfo>",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "parse_rust_parameters",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "params_str",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<ParameterInfo>",
          "description": null
        },
        {
          "name": "parse_python_parameters",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "params_str",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<ParameterInfo>",
          "description": null
        },
        {
          "name": "parse_js_parameters",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "params_str",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<ParameterInfo>",
          "description": null
        },
        {
          "name": "parse_java_parameters",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "params_str",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<ParameterInfo>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<DependencyInfo>>",
          "description": null
        },
        {
          "name": "calculate_complexity_metrics",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ComponentComplexity>",
          "description": null
        },
        {
          "name": "assess_quality",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "complexity",
              "param_type": "&ComponentComplexity",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<QualityAssessment>",
          "description": null
        },
        {
          "name": "extract_responsibilities",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "component",
              "param_type": "&CoreComponent",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "generate_recommendations",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "quality",
              "param_type": "&QualityAssessment",
              "is_optional": false,
              "description": null
            },
            {
              "name": "complexity",
              "param_type": "&ComponentComplexity",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<String>",
          "description": null
        },
        {
          "name": "ComponentExtractor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ComponentAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "InterfaceInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ParameterInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DependencyInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ComponentComplexity",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "QualityAssessment",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "QualityIssue",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::structure_extractor::{CoreComponent, ProjectStructure};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 44.0,
        "lines_of_code": 665,
        "number_of_functions": 22,
        "number_of_classes": 10,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "size",
            "description": "文件过大",
            "suggestion": "考虑将文件拆分为多个模块",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在一些重复的正则表达式模式，可以考虑抽取为共享函数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "某些函数的参数过多，可以考虑使用结构体来组织参数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分复杂的正则表达式可能需要更详细的注释以便于维护",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将不同语言的接口提取逻辑进一步模块化",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将不同语言的接口提取逻辑进一步模块化，可能通过策略模式实现",
        "为复杂的正则表达式添加更详细的注释",
        "考虑使用更高效的正则引擎或解析库",
        "实现对Kotlin、JSX、TSX、Vue和Svelte的支持",
        "考虑将参数过多的函数拆分或使用结构体组织参数"
      ]
    },
    {
      "component": {
        "name": "ai_analysis_types.rs",
        "file_path": "src/extractors/ai_analysis_types.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件定义了AI组件分析结果的数据结构，包括详细功能描述、核心职责、架构角色、代码质量评估、依赖关系分析和改进建议。它还定义了代码质量评估、依赖关系分析、AI架构洞察结果、设计原则评估、AI项目摘要结果、AI关系分析结果、组件关系和耦合度分析的数据结构。",
      "responsibilities": [
        "定义AI组件分析结果的数据结构",
        "提供代码质量评估的数据结构",
        "提供依赖关系分析的数据结构",
        "定义AI架构洞察结果的数据结构",
        "提供AI项目摘要结果的数据结构"
      ],
      "interfaces": [
        {
          "name": "AIComponentAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CodeQualityAssessment",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DependencyAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIArchitectureInsights",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DesignPrincipleAssessment",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIProjectSummary",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIRelationshipAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ComponentRelationship",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CouplingAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use schemars::JsonSchema;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 170,
        "number_of_functions": 0,
        "number_of_classes": 9,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.9,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将某些大的结构体拆分为更小的结构体",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更多的文档注释",
        "考虑将某些大的结构体拆分为更小的结构体",
        "确保依赖库的版本兼容性",
        "定期检查依赖库的安全性"
      ]
    },
    {
      "component": {
        "name": "ai_research_types.rs",
        "file_path": "src/extractors/ai_research_types.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件定义了三个主要的数据结构，用于存储和传输AI增强的调研报告分析结果。AIResearchEnhancement结构体包含了深度洞察、架构评估、技术债务、改进路径和最佳实践推荐等字段。AIComprehensiveInsights结构体包含了跨报告综合洞察、质量评估洞察、架构复杂度洞察和技术栈洞察等字段。AIRecommendations结构体包含了架构改进建议、代码质量改进建议、性能优化建议、维护性改进建议和优先级排序等字段。这些结构体使用了serde和schemars属性，以便可以被序列化为JSON格式，并且可以生成JSON模式。",
      "responsibilities": [
        "定义AI增强调研报告的数据结构",
        "提供序列化和反序列化支持",
        "生成和存储AI分析的各种洞察和建议"
      ],
      "interfaces": [
        {
          "name": "AIResearchEnhancement",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIComprehensiveInsights",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIRecommendations",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use schemars::JsonSchema;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 84,
        "number_of_functions": 0,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.9,
        "maintainability": 0.9,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.9,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将字符串向量类型的字段改为更具体的枚举类型",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释，特别是关于字段的具体含义和使用场景",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将字符串向量类型的字段改为更具体的枚举类型，以提高类型安全性",
        "添加更多的文档注释，特别是关于字段的具体含义和使用场景",
        "考虑添加验证逻辑，以确保数据的有效性",
        "考虑添加默认值或构造函数，以便更轻松地创建实例"
      ]
    },
    {
      "component": {
        "name": "research_extractor.rs",
        "file_path": "src/extractors/research_extractor.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::cache::CacheManager",
          "crate::agents::preprocessing_agent::PreprocessingResult"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "ResearchExtractor 组件是一个 Rust 实现的异步调研提取器，主要功能是基于预处理结果生成各种类型的研究报告。它包含四个主要的报告生成方法：generate_core_functionality_report、generate_architecture_report、generate_dependency_report 和 generate_quality_report。每种报告都包含多个章节，每个章节都有标题、内容、类型和重要性评分。组件使用 CacheManager 来管理缓存，并处理来自 PreprocessingResult 的数据。",
      "responsibilities": [
        "生成各种类型的研究报告（核心功能、架构、依赖关系、代码质量）",
        "处理和组织预处理后的数据",
        "创建结构化的报告内容和章节",
        "提供见解和建议基于分析结果"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "cache_manager",
              "param_type": "CacheManager",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "generate_reports",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<ResearchReport>>",
          "description": null
        },
        {
          "name": "generate_core_functionality_report",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchReport>",
          "description": null
        },
        {
          "name": "generate_architecture_report",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchReport>",
          "description": null
        },
        {
          "name": "generate_dependency_report",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchReport>",
          "description": null
        },
        {
          "name": "generate_quality_report",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ResearchReport>",
          "description": null
        },
        {
          "name": "ResearchExtractor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ResearchReport",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ReportSection",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::HashMap;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::preprocessing_agent::PreprocessingResult;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 4.0,
        "lines_of_code": 220,
        "number_of_functions": 6,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在一些重复的模式，特别是在生成不同类型报告时",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以更加细化，提供更多的上下文信息",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少详细的模块注释，特别是对于复杂的逻辑部分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将报告生成逻辑提取为独立的策略模式",
        "增加更多的单元测试来覆盖不同的报告生成场景",
        "为复杂的逻辑部分添加详细的注释",
        "考虑实现报告生成的并行处理以提高性能",
        "为 PreprocessingResult 结构体添加详细的文档注释"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/extractors/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.6,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该模块主要负责组织和导出相关的提取器和处理器模块。它定义了多个子模块，并将它们的公共接口导出，以便其他部分的代码可以使用这些功能。",
      "responsibilities": [
        "组织和导出相关模块",
        "提供统一的模块接口",
        "管理模块间的依赖关系"
      ],
      "interfaces": [],
      "dependencies": [],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 17,
        "number_of_functions": 0,
        "number_of_classes": 0,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的模块文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将相关模块分组导出",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "可以添加更详细的模块文档注释",
        "可以考虑将相关模块分组导出",
        "可以添加模块级别的测试"
      ]
    },
    {
      "component": {
        "name": "documentation_extractor.rs",
        "file_path": "src/extractors/documentation_extractor.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::cache::CacheManager",
          "crate::agents::preprocessing_agent::PreprocessingResult",
          "crate::extractors::research_extractor::ResearchReport",
          "crate::utils::MarkdownUtils"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个文档提取器，主要负责从预处理结果中提取信息并生成各种格式的文档输出。它包含多个结构体和方法，用于生成C4架构文档、上下文图、容器图、组件图、代码结构图以及各种类型的文档（如概述、架构文档、API文档、开发指南和部署指南）。组件使用异步编程模式，并依赖于缓存管理器来管理和缓存生成的文档结果。",
      "responsibilities": [
        "从预处理结果中提取文档信息",
        "生成各种类型的架构图和文档",
        "管理和缓存文档生成结果",
        "处理和格式化文档内容"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "cache_manager",
              "param_type": "CacheManager",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "generate_c4_documentation",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<C4Documentation>",
          "description": null
        },
        {
          "name": "generate_all_documents",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<DocumentInfo>>",
          "description": null
        },
        {
          "name": "generate_context_diagram",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "generate_container_diagram",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "generate_component_diagram",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "generate_code_diagram",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "generate_overview",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<String>",
          "description": null
        },
        {
          "name": "generate_architecture_decisions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<ArchitectureDecision>>",
          "description": null
        },
        {
          "name": "generate_overview_document",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            },
            {
              "name": "research_reports",
              "param_type": "&[ResearchReport]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_architecture_document",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_api_document",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_development_guide",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentInfo>",
          "description": null
        },
        {
          "name": "generate_deployment_guide",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_preprocessing_result",
              "param_type": "&PreprocessingResult",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<DocumentInfo>",
          "description": null
        },
        {
          "name": "DocumentationExtractor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "C4Documentation",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitectureDecision",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DocumentInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::agents::preprocessing_agent::PreprocessingResult;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::research_extractor::ResearchReport;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::utils::MarkdownUtils;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 12.0,
        "lines_of_code": 387,
        "number_of_functions": 14,
        "number_of_classes": 4,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在一些未使用的参数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "某些函数的实现过于简单，可能需要扩展",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺乏详细的代码注释和文档",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更详细的代码注释和文档",
        "扩展简单函数的实现",
        "处理未使用的参数",
        "考虑使用更通用的接口以减少对特定实现的依赖"
      ]
    },
    {
      "component": {
        "name": "typescript.rs",
        "file_path": "src/extractors/language_processors/typescript.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "TypeScriptProcessor 组件是一个用于处理 TypeScript 文件的语言处理器。它的主要功能包括：\n\n1. 提取依赖关系：通过正则表达式匹配 TypeScript 文件中的 import 语句，提取依赖的模块路径，并区分内部和外部依赖。\n2. 确定文件类型：根据文件名和内容，确定 TypeScript 文件的类型，如主文件、声明文件、配置文件、测试文件等。\n3. 识别重要代码行：识别函数定义、类定义、接口定义、导入导出语句等重要代码行。\n4. 提供支持的文件扩展名：返回支持的 TypeScript 文件扩展名列表。\n5. 返回语言名称：返回处理的语言名称。",
      "responsibilities": [
        "从 TypeScript 文件中提取依赖关系",
        "确定 TypeScript 文件的类型",
        "识别重要的代码行",
        "提供支持的文件扩展名列表",
        "返回语言名称"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "TypeScriptProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 20.0,
        "lines_of_code": 131,
        "number_of_functions": 8,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在较高的圈复杂度，特别是在 extract_dependencies 方法中，需要拆分为更小的函数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的错误处理和日志记录",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试来覆盖不同的代码路径",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将 extract_dependencies 方法拆分为更小的函数，以减少圈复杂度",
        "添加更多的错误处理和日志记录",
        "添加更多的单元测试来覆盖不同的代码路径",
        "考虑使用更现代的正则表达式库",
        "添加对 TypeScript 新特性的支持"
      ]
    },
    {
      "component": {
        "name": "java.rs",
        "file_path": "src/extractors/language_processors/java.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "JavaProcessor 组件是一个 Rust 实现的 Java 语言处理器，主要负责从 Java 源代码中提取依赖关系和确定组件类型。它实现了 LanguageProcessor trait，提供了支持的文件扩展名、依赖提取、组件类型确定、重要行判断和语言名称等功能。组件使用了正则表达式来提取 import 语句和 package 语句，并根据文件名和代码内容来确定组件类型。它还提供了对 Java 语言的支持，包括文件扩展名和语言名称。",
      "responsibilities": [
        "从 Java 源代码中提取依赖关系，包括 import 语句和 package 语句。",
        "确定 Java 文件的组件类型，如测试文件、接口、枚举、抽象类、普通类等。",
        "提供对 Java 语言的支持，包括文件扩展名和语言名称。",
        "判断代码行是否重要，以便于后续的分析和处理。",
        "实现 LanguageProcessor trait，提供标准化的接口方法。"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "JavaProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 14.0,
        "lines_of_code": 105,
        "number_of_functions": 6,
        "number_of_classes": 4,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将正则表达式的编译移到模块级别，以避免在每次创建实例时重复编译。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的错误处理和日志记录，以帮助调试和维护。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将依赖提取逻辑拆分为更小的函数，以提高代码的可读性和可维护性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试，以确保代码的正确性和稳定性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用更现代的 Rust 语言特性，以提高代码的表达能力和安全性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将正则表达式的编译移到模块级别，以避免在每次创建实例时重复编译。",
        "添加更多的错误处理和日志记录，以帮助调试和维护。",
        "考虑将依赖提取逻辑拆分为更小的函数，以提高代码的可读性和可维护性。",
        "添加更多的单元测试，以确保代码的正确性和稳定性。",
        "考虑使用更现代的 Rust 语言特性，以提高代码的表达能力和安全性。",
        "优化依赖关系的提取逻辑，以提高性能和准确性。",
        "考虑添加对更多 Java 语言特性的支持，以提高组件的功能性和适用性。"
      ]
    },
    {
      "component": {
        "name": "react.rs",
        "file_path": "src/extractors/language_processors/react.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "ReactProcessor 组件是一个专门用于处理 React 代码的语言处理器。它实现了 LanguageProcessor trait，提供了提取依赖关系、确定组件类型、识别重要行等功能。组件通过正则表达式来匹配和提取代码中的依赖关系，并根据文件名和内容来确定组件类型。它支持 .jsx 和 .tsx 文件扩展名，并能够识别多种 React 组件类型，如 React 应用、React 入口、React 页面、React Hook、React 上下文、React 缩减器和 React 工具。",
      "responsibilities": [
        "提取 React 代码中的依赖关系。",
        "确定 React 组件的类型。",
        "识别 React 代码中的重要行。",
        "支持特定的文件扩展名。",
        "提供 React 语言处理器的基本信息。"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "ReactProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 20.0,
        "lines_of_code": 142,
        "number_of_functions": 7,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码的圈复杂度较高，需要拆分一些复杂的逻辑块。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以增加更多的错误处理和日志记录。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以优化正则表达式的初始化方式，使其更加灵活和可配置。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将复杂的正则表达式拆分成更小的部分，以提高可读性和可维护性。",
        "增加更多的错误处理和日志记录，以便于调试和问题排查。",
        "考虑使用更灵活的配置方式来初始化正则表达式，以便于在不同的环境中使用。",
        "优化依赖提取逻辑，以提高准确性和性能。",
        "增加单元测试来覆盖更多的边界情况和特殊情况。"
      ]
    },
    {
      "component": {
        "name": "mod.rs",
        "file_path": "src/extractors/language_processors/mod.rs",
        "component_type": "rust_module",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件是一个语言处理器管理器，负责管理和协调多种语言处理器。它通过一个统一的接口提供了提取文件依赖、确定组件类型和识别重要代码行等功能。该组件支持多种编程语言，包括Rust、JavaScript、TypeScript、React、Vue、Svelte、Kotlin、Python和Java。它的核心功能是根据文件扩展名选择合适的语言处理器，并调用该处理器的相应方法。",
      "responsibilities": [
        "管理和协调多种语言处理器",
        "根据文件扩展名选择合适的语言处理器",
        "提取文件依赖关系",
        "确定组件类型",
        "识别重要代码行"
      ],
      "interfaces": [
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>;\n    \n    /// 提取文件依赖\n    fn extract_dependencies(&self, content: &str, file_path: &Path) -> Vec<Dependency>;\n    \n    /// 判断组件类型\n    fn determine_component_type(&self, file_path: &Path, content: &str) -> String;\n    \n    /// 识别重要代码行\n    fn is_important_line(&self, line: &str) -> bool;\n    \n    /// 获取语言名称\n    fn language_name(&self) -> &'static str;\n}\n\n/// 语言处理器管理器\npub struct LanguageProcessorManager",
          "description": null
        },
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "get_processor",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Option<&dyn LanguageProcessor>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "Dependency",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "LanguageProcessorManager",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 6.0,
        "lines_of_code": 103,
        "number_of_functions": 10,
        "number_of_classes": 2,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的错误处理和日志记录",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用更现代的Rust特性",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档和注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更多的错误处理和日志记录",
        "考虑使用更现代的Rust特性",
        "添加更多的文档和注释",
        "考虑添加并发处理能力",
        "考虑添加缓存机制"
      ]
    },
    {
      "component": {
        "name": "rust.rs",
        "file_path": "src/extractors/language_processors/rust.rs",
        "component_type": "rust_main",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "rust.rs组件是一个Rust语言处理器，专门用于分析Rust源代码文件。它的主要功能包括提取依赖关系、确定文件类型以及识别重要的代码行。组件通过正则表达式匹配use和mod语句来提取依赖关系，并根据文件名和内容确定文件类型。它还能识别各种重要的代码行，如函数定义、结构体定义等。",
      "responsibilities": [
        "解析Rust代码以提取use和mod语句",
        "确定Rust文件的组件类型",
        "识别重要的代码行",
        "管理Rust语言处理器的依赖关系"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "RustProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 20.0,
        "lines_of_code": 135,
        "number_of_functions": 11,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以将正则表达式编译时错误处理改进",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以将一些魔法字符串提取为常量",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将正则表达式编译时错误处理改进",
        "添加更多的文档注释以帮助其他开发者理解代码",
        "将一些魔法字符串提取为常量以提高代码可读性",
        "考虑添加单元测试以确保功能的正确性",
        "可以考虑使用更现代的Rust语法和特性"
      ]
    },
    {
      "component": {
        "name": "vue.rs",
        "file_path": "src/extractors/language_processors/vue.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "VueProcessor是一个专门用于处理Vue单文件组件的语言处理器实现。它主要负责从Vue文件中提取脚本内容，识别文件类型，提取依赖关系，以及识别重要的代码行。该组件使用正则表达式来解析Vue文件的结构，并根据文件内容和文件名来确定文件的类型。它还能识别Vue文件中的导入语句，并将其转换为标准的依赖项格式。",
      "responsibilities": [
        "解析Vue文件内容并提取脚本部分",
        "识别和分类Vue文件的类型",
        "提取Vue文件中的依赖关系",
        "识别重要的Vue相关代码行"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "extract_script_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "VueProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 23.0,
        "lines_of_code": 152,
        "number_of_functions": 7,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以将正则表达式的编译移到构造函数之外，以避免每次创建实例时都要编译",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的错误处理，特别是在处理无效的Vue文件内容时",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以将一些重复的字符串提取为常量，以提高可维护性",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将正则表达式的编译移到构造函数之外",
        "添加更多的错误处理和日志记录",
        "提取重复的字符串为常量",
        "考虑使用更高效的字符串处理方法",
        "添加单元测试来覆盖各种Vue文件类型和内容"
      ]
    },
    {
      "component": {
        "name": "javascript.rs",
        "file_path": "src/extractors/language_processors/javascript.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "JavaScriptProcessor 组件是一个 Rust 实现的 JavaScript 语言处理器，主要功能包括：\n\n1. 提取 JavaScript 文件中的依赖关系：通过正则表达式匹配 import、require 和动态 import 语句，提取依赖路径和信息。\n2. 确定 JavaScript 文件类型：根据文件名和内容模式判断文件类型（如主文件、配置文件、测试文件等）。\n3. 识别重要行：检测函数定义、类定义、导入/导出语句等重要代码行。\n\n组件使用了 Rust 的模式匹配特性来处理正则表达式匹配结果，并实现了 LanguageProcessor trait 所定义的接口。",
      "responsibilities": [
        "实现 LanguageProcessor trait 并提供 JavaScript 语言处理功能",
        "提取 JavaScript 文件中的依赖关系",
        "确定 JavaScript 文件的类型",
        "识别 JavaScript 文件中的重要行"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "JavaScriptProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 19.0,
        "lines_of_code": 141,
        "number_of_functions": 9,
        "number_of_classes": 2,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在重复的模式匹配逻辑，可以提取为辅助方法",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的错误处理和日志记录",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以优化正则表达式的编译和缓存策略",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "提取重复的模式匹配逻辑到辅助方法",
        "添加更详细的错误处理和日志记录",
        "优化正则表达式的编译和缓存策略",
        "考虑添加单元测试来覆盖不同的 JavaScript 语法情况",
        "可以添加对 TypeScript 文件的支持"
      ]
    },
    {
      "component": {
        "name": "kotlin.rs",
        "file_path": "src/extractors/language_processors/kotlin.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "KotlinProcessor 组件是一个专门用于处理 Kotlin 语言代码文件的 Rust 结构。它实现了 LanguageProcessor trait，提供了提取依赖关系、确定组件类型、识别重要代码行等功能。组件使用正则表达式来匹配 import 和 package 语句，并根据文件名和内容确定组件类型。它支持多种 Kotlin 组件类型的识别，包括 Activity、Fragment、Service、Repository 等。",
      "responsibilities": [
        "解析 Kotlin 文件内容，提取导入和包声明",
        "确定文件的组件类型基于文件名和内容",
        "识别重要的代码行",
        "管理和维护正则表达式用于模式匹配"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "KotlinProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 29.0,
        "lines_of_code": 166,
        "number_of_functions": 6,
        "number_of_classes": 10,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码中存在较高的圈复杂度，特别是在 determine_component_type 方法中，需要拆分成更小的函数",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以增加更多的错误处理和输入验证",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以提取一些重复的模式匹配逻辑到单独的方法中",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将 determine_component_type 方法拆分为多个更小的方法，每个方法处理一种组件类型",
        "增加对输入内容的验证，确保处理的内容是有效的 Kotlin 代码",
        "提取重复的模式匹配逻辑到单独的方法中，以提高代码的可维护性",
        "考虑使用枚举来表示组件类型，而不是字符串",
        "增加单元测试来覆盖不同的组件类型和边界情况"
      ]
    },
    {
      "component": {
        "name": "python.rs",
        "file_path": "src/extractors/language_processors/python.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "PythonProcessor 组件是一个 Rust 实现的 Python 语言处理器，主要用于从 Python 源代码中提取依赖关系和确定文件类型。它实现了 LanguageProcessor trait，提供了支持的文件扩展名列表、提取依赖关系、确定组件类型、识别重要代码行等功能。组件通过正则表达式来匹配 Python 导入语句，并根据匹配结果创建相应的依赖项。它还能够根据文件名和内容来确定文件的类型，如脚本、模块、类、测试等。",
      "responsibilities": [
        "从 Python 源代码中提取依赖关系。",
        "确定 Python 文件的类型（如脚本、模块、类、测试等）。",
        "识别重要的代码行，如类定义、函数定义、导入语句等。",
        "提供支持的文件扩展名列表。",
        "返回处理的语言名称。"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "PythonProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 14.0,
        "lines_of_code": 109,
        "number_of_functions": 10,
        "number_of_classes": 3,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.8,
        "maintainability": 0.8,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将正则表达式的编译移到模块级别，以避免在每次创建实例时重复编译。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的文档注释，特别是对于公共方法和复杂的逻辑部分。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑使用枚举来表示组件类型，以提高代码的可读性和类型安全性。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试来覆盖不同的 Python 语法情况，特别是边界情况。",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "考虑将正则表达式的编译移到模块级别，以避免在每次创建实例时重复编译。",
        "添加更多的文档注释，特别是对于公共方法和复杂的逻辑部分。",
        "考虑使用枚举来表示组件类型，以提高代码的可读性和类型安全性。",
        "添加更多的单元测试来覆盖不同的 Python 语法情况，特别是边界情况。",
        "考虑添加对 Python 3.9+ 新特性的支持，如类型注解等。"
      ]
    },
    {
      "component": {
        "name": "svelte.rs",
        "file_path": "src/extractors/language_processors/svelte.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "super::{Dependency, LanguageProcessor}"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "svelte.rs 组件是一个 Svelte 语言处理器，实现了 LanguageProcessor trait。它的主要功能包括：\n\n1. 使用正则表达式提取 Svelte 文件中的脚本内容\n2. 解析脚本内容以识别导入依赖\n3. 根据文件名和内容确定组件类型\n4. 识别 Svelte 文件中的重要代码行\n\n组件通过两个正则表达式来匹配脚本标签和导入语句。在提取依赖时，它能够识别普通导入、Svelte 组件、Svelte 存储等不同类型的依赖，并标记它们是否为外部依赖。组件类型确定功能通过文件名和内容模式来判断文件属于哪种 Svelte 组件类型。",
      "responsibilities": [
        "解析 Svelte 文件内容",
        "提取脚本部分内容",
        "识别和分类依赖关系",
        "确定组件类型",
        "识别重要代码行"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "extract_script_content",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "supported_extensions",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<&'static str>",
          "description": null
        },
        {
          "name": "extract_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            },
            {
              "name": "_file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Vec<Dependency>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file_path",
              "param_type": "&Path",
              "is_optional": false,
              "description": null
            },
            {
              "name": "content",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "is_important_line",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "line",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "language_name",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "&'static str",
          "description": null
        },
        {
          "name": "SvelteProcessor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use super::{Dependency, LanguageProcessor};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use regex::Regex;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::Path;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 24.0,
        "lines_of_code": 157,
        "number_of_functions": 7,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.3,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "documentation",
            "description": "注释不足",
            "suggestion": "增加代码注释以提高可读性",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "高圈复杂度（24.0）需要拆分",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数过于庞大",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "错误处理可以增强",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "将高圈复杂度的方法拆分为更小的方法",
        "增加更详细的错误处理和日志记录",
        "考虑使用更现代的解析方法替代正则表达式",
        "增加单元测试覆盖更多边界情况",
        "考虑使用枚举类型来表示组件类型"
      ]
    },
    {
      "component": {
        "name": "ai_documentation_types.rs",
        "file_path": "src/extractors/ai_documentation_types.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件定义了AI文档增强、技术规范生成、测试指南生成、性能分析和安全分析等多个功能模块的数据结构。每个功能模块都通过多个结构体来定义其数据模型，这些结构体包含了详细的字段定义和文档说明。组件使用了Rust的强类型特性，并实现了序列化和反序列化功能，支持JSON模式生成。",
      "responsibilities": [
        "定义AI文档增强的数据结构",
        "定义技术规范生成的数据结构",
        "定义测试指南生成的数据结构",
        "定义性能分析结果的数据结构",
        "定义安全分析结果的数据结构"
      ],
      "interfaces": [
        {
          "name": "AIDocumentEnhancement",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DocumentSection",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AITechnicalSpecification",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "TechStackAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ArchitectureStandards",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CodingStandards",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "QualityStandards",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AITestingGuide",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "TestingStrategy",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "TestType",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "TestTool",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CoverageTargets",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AIPerformanceAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "PerformanceOverview",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "PerformanceBottleneck",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "OptimizationRecommendation",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "AISecurityAnalysis",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "SecurityOverview",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "SecurityRisk",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "SecurityRecommendation",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ComplianceCheck",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use schemars::JsonSchema;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 1.0,
        "lines_of_code": 350,
        "number_of_functions": 0,
        "number_of_classes": 21,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.9,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.9,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码注释不够详细",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分结构体字段缺乏文档说明",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的单元测试",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "为每个结构体添加更详细的文档注释",
        "为关键结构体添加单元测试",
        "考虑添加更多的验证逻辑",
        "评估是否需要添加更多的错误处理机制"
      ]
    },
    {
      "component": {
        "name": "structure_extractor.rs",
        "file_path": "src/extractors/structure_extractor.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::cache::CacheManager",
          "crate::extractors::language_processors::LanguageProcessorManager"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件主要负责提取项目结构信息，包括文件和目录的分析、重要性分数的计算以及缓存管理。它使用了异步处理来提高性能，并提供了详细的项目结构信息。",
      "responsibilities": [
        "提取项目结构信息",
        "分析文件和目录",
        "计算重要性分数",
        "管理缓存"
      ],
      "interfaces": [
        {
          "name": "new",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "cache_manager",
              "param_type": "CacheManager",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Self",
          "description": null
        },
        {
          "name": "extract_structure",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ProjectStructure>",
          "description": null
        },
        {
          "name": "extract_structure_impl",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "project_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<ProjectStructure>",
          "description": null
        },
        {
          "name": "create_file_info",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            },
            {
              "name": "root_path",
              "param_type": "&PathBuf",
              "is_optional": false,
              "description": null
            },
            {
              "name": "metadata",
              "param_type": "&Metadata",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<FileInfo>",
          "description": null
        },
        {
          "name": "categorize_file_size",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "size",
              "param_type": "u64",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "should_ignore_directory",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "dir_name",
              "param_type": "&str",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "bool",
          "description": null
        },
        {
          "name": "calculate_importance_scores",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "files",
              "param_type": "&mut [FileInfo]",
              "is_optional": false,
              "description": null
            },
            {
              "name": "directories",
              "param_type": "&mut [DirectoryInfo]",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": null,
          "description": null
        },
        {
          "name": "identify_core_components",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "structure",
              "param_type": "&ProjectStructure",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<CoreComponent>>",
          "description": null
        },
        {
          "name": "determine_component_type",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file",
              "param_type": "&FileInfo",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "String",
          "description": null
        },
        {
          "name": "extract_file_dependencies",
          "interface_type": "function",
          "visibility": "private",
          "parameters": [
            {
              "name": "&self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            },
            {
              "name": "file",
              "param_type": "&FileInfo",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Result<Vec<String>>",
          "description": null
        },
        {
          "name": "StructureExtractor",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "ProjectStructure",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "DirectoryInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "FileInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "CoreComponent",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        },
        {
          "name": "RelationshipInfo",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use anyhow::Result;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use futures::future::BoxFuture;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use serde::{Deserialize, Serialize};",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::collections::HashMap;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::fs::Metadata;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::cache::CacheManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use crate::extractors::language_processors::LanguageProcessorManager;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 40.0,
        "lines_of_code": 485,
        "number_of_functions": 11,
        "number_of_classes": 6,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.75,
        "maintainability": 0.7,
        "readability": 0.8,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.7,
        "issues": [
          {
            "severity": "high",
            "category": "complexity",
            "description": "圈复杂度过高",
            "suggestion": "考虑将函数拆分为更小的函数",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "代码注释不足",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "部分函数实现不完整",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "缺少错误处理",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "增加更多的代码注释",
        "完成未实现的函数",
        "优化错误处理机制",
        "减少不必要的依赖"
      ]
    },
    {
      "component": {
        "name": "cli.rs",
        "file_path": "src/cli.rs",
        "component_type": "rust_struct",
        "importance_score": 0.8,
        "dependencies": [
          "crate::config::Config"
        ],
        "description": null,
        "functions": [],
        "interfaces": []
      },
      "detailed_description": "该组件实现了一个命令行接口解析器，使用clap库解析命令行参数并将其转换为应用程序配置。它定义了各种命令行选项，包括项目路径、输出路径、配置文件路径、项目名称、文档格式等。组件的核心功能是将这些命令行参数转换为Config对象，该对象将用于应用程序的其他部分。它还处理LLM相关的配置参数，如模型名称、最大tokens数和温度参数。此外，它还管理缓存行为，允许用户禁用缓存或强制重新生成内容。",
      "responsibilities": [
        "解析命令行参数",
        "将命令行参数转换为配置对象",
        "管理项目路径和输出路径",
        "处理LLM相关配置参数",
        "控制缓存行为"
      ],
      "interfaces": [
        {
          "name": "to_config",
          "interface_type": "function",
          "visibility": "public",
          "parameters": [
            {
              "name": "self",
              "param_type": "unknown",
              "is_optional": false,
              "description": null
            }
          ],
          "return_type": "Config",
          "description": null
        },
        {
          "name": "Cli",
          "interface_type": "struct",
          "visibility": "public",
          "parameters": [],
          "return_type": null,
          "description": null
        }
      ],
      "dependencies": [
        {
          "name": "use crate::config::Config;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use clap::Parser;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        },
        {
          "name": "use std::path::PathBuf;",
          "dependency_type": "import",
          "is_external": true,
          "version": null,
          "purpose": null
        }
      ],
      "complexity_metrics": {
        "cyclomatic_complexity": 6.0,
        "lines_of_code": 103,
        "number_of_functions": 1,
        "number_of_classes": 1,
        "depth_of_inheritance": 0,
        "coupling_factor": 0.5,
        "cohesion_score": 0.7
      },
      "quality_assessment": {
        "overall_score": 0.85,
        "maintainability": 0.8,
        "readability": 0.9,
        "testability": 0.7,
        "reusability": 0.6,
        "documentation_quality": 0.9,
        "issues": [
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更多的输入验证",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以添加更详细的错误处理",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          },
          {
            "severity": "medium",
            "category": "ai_analysis",
            "description": "可以考虑将配置转换逻辑拆分为更小的方法",
            "suggestion": "参考AI分析建议进行改进",
            "line_number": null
          }
        ]
      },
      "recommendations": [
        "添加更全面的输入验证，特别是对于路径参数",
        "实现更详细的错误处理和用户反馈",
        "考虑将配置转换逻辑拆分为更小的方法以提高可维护性",
        "添加对命令行参数的更详细的文档注释",
        "考虑添加配置参数的范围检查"
      ]
    }
  ],
  "relationships": [
    {
      "source": "file_explorer.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/tools/file_explorer.rs 通过 use 语句依赖于 crate::config::Config (第8行)"
    },
    {
      "source": "mod.rs",
      "target": "file_explorer",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/tools/mod.rs 通过 mod 语句依赖于 file_explorer (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "code_analyzer",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/tools/mod.rs 通过 mod 语句依赖于 code_analyzer (第2行)"
    },
    {
      "source": "mod.rs",
      "target": "dependency_analyzer",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/tools/mod.rs 通过 mod 语句依赖于 dependency_analyzer (第3行)"
    },
    {
      "source": "mod.rs",
      "target": "architecture_detector",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/tools/mod.rs 通过 mod 语句依赖于 architecture_detector (第4行)"
    },
    {
      "source": "client.rs",
      "target": "crate::config::LLMConfig",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/llm/client.rs 通过 use 语句依赖于 crate::config::LLMConfig (第11行)"
    },
    {
      "source": "mod.rs",
      "target": "client",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/llm/mod.rs 通过 mod 语句依赖于 client (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "types",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/llm/mod.rs 通过 mod 语句依赖于 types (第2行)"
    },
    {
      "source": "mod.rs",
      "target": "crate::config::CacheConfig",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/cache/mod.rs 通过 use 语句依赖于 crate::config::CacheConfig (第8行)"
    },
    {
      "source": "lib.rs",
      "target": "config",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 config (第1行)"
    },
    {
      "source": "lib.rs",
      "target": "cli",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 cli (第2行)"
    },
    {
      "source": "lib.rs",
      "target": "agents",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 agents (第3行)"
    },
    {
      "source": "lib.rs",
      "target": "tools",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 tools (第4行)"
    },
    {
      "source": "lib.rs",
      "target": "cache",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 cache (第5行)"
    },
    {
      "source": "lib.rs",
      "target": "extractors",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 extractors (第6行)"
    },
    {
      "source": "lib.rs",
      "target": "workflow",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 workflow (第7行)"
    },
    {
      "source": "lib.rs",
      "target": "utils",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 utils (第8行)"
    },
    {
      "source": "lib.rs",
      "target": "llm",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/lib.rs 通过 mod 语句依赖于 llm (第9行)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/preprocessing_agent.rs 通过 use 语句依赖于 crate::llm::LLMClient (第1行)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/preprocessing_agent.rs 通过 use 语句依赖于 crate::cache::CacheManager (第6行)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/preprocessing_agent.rs 通过 use 语句依赖于 crate::config::Config (第7行)"
    },
    {
      "source": "mod.rs",
      "target": "preprocessing_agent",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/agents/mod.rs 通过 mod 语句依赖于 preprocessing_agent (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "research_agent",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/agents/mod.rs 通过 mod 语句依赖于 research_agent (第2行)"
    },
    {
      "source": "mod.rs",
      "target": "documentation_agent",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/agents/mod.rs 通过 mod 语句依赖于 documentation_agent (第3行)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/research_agent.rs 通过 use 语句依赖于 crate::llm::LLMClient (第1行)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/research_agent.rs 通过 use 语句依赖于 crate::agents::preprocessing_agent::PreprocessingResult (第6行)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/research_agent.rs 通过 use 语句依赖于 crate::cache::CacheManager (第7行)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/research_agent.rs 通过 use 语句依赖于 crate::config::Config (第8行)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/research_agent.rs 通过 use 语句依赖于 crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations} (第9行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::llm::LLMClient (第2行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::cache::CacheManager (第6行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::config::Config (第7行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult} (第8行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis} (第9行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::FileUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::FileUtils (第10行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第301行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第386行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第653行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第709行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第819行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第889行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第1016行)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/agents/documentation_agent.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第1110行)"
    },
    {
      "source": "mod.rs",
      "target": "file_utils",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/utils/mod.rs 通过 mod 语句依赖于 file_utils (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "text_utils",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/utils/mod.rs 通过 mod 语句依赖于 text_utils (第2行)"
    },
    {
      "source": "mod.rs",
      "target": "markdown_utils",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/utils/mod.rs 通过 mod 语句依赖于 markdown_utils (第3行)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/workflow/mod.rs 通过 use 语句依赖于 crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent} (第6行)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::research_agent::ResearchResult",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/workflow/mod.rs 通过 use 语句依赖于 crate::agents::research_agent::ResearchResult (第7行)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::documentation_agent::DocumentationResult",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/workflow/mod.rs 通过 use 语句依赖于 crate::agents::documentation_agent::DocumentationResult (第8行)"
    },
    {
      "source": "mod.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/workflow/mod.rs 通过 use 语句依赖于 crate::config::Config (第9行)"
    },
    {
      "source": "main.rs",
      "target": "agents",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 agents (第5行)"
    },
    {
      "source": "main.rs",
      "target": "cache",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 cache (第6行)"
    },
    {
      "source": "main.rs",
      "target": "cli",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 cli (第7行)"
    },
    {
      "source": "main.rs",
      "target": "config",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 config (第8行)"
    },
    {
      "source": "main.rs",
      "target": "extractors",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 extractors (第9行)"
    },
    {
      "source": "main.rs",
      "target": "llm",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 llm (第10行)"
    },
    {
      "source": "main.rs",
      "target": "tools",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 tools (第11行)"
    },
    {
      "source": "main.rs",
      "target": "utils",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 utils (第12行)"
    },
    {
      "source": "main.rs",
      "target": "workflow",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/main.rs 通过 mod 语句依赖于 workflow (第13行)"
    },
    {
      "source": "component_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/component_extractor.rs 通过 use 语句依赖于 crate::cache::CacheManager (第6行)"
    },
    {
      "source": "component_extractor.rs",
      "target": "crate::extractors::structure_extractor::{CoreComponent, ProjectStructure}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/component_extractor.rs 通过 use 语句依赖于 crate::extractors::structure_extractor::{CoreComponent, ProjectStructure} (第7行)"
    },
    {
      "source": "research_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/research_extractor.rs 通过 use 语句依赖于 crate::cache::CacheManager (第5行)"
    },
    {
      "source": "research_extractor.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/research_extractor.rs 通过 use 语句依赖于 crate::agents::preprocessing_agent::PreprocessingResult (第6行)"
    },
    {
      "source": "mod.rs",
      "target": "structure_extractor",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 structure_extractor (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "component_extractor",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 component_extractor (第2行)"
    },
    {
      "source": "mod.rs",
      "target": "research_extractor",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 research_extractor (第3行)"
    },
    {
      "source": "mod.rs",
      "target": "documentation_extractor",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 documentation_extractor (第4行)"
    },
    {
      "source": "mod.rs",
      "target": "language_processors",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 language_processors (第5行)"
    },
    {
      "source": "mod.rs",
      "target": "ai_analysis_types",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 ai_analysis_types (第6行)"
    },
    {
      "source": "mod.rs",
      "target": "ai_research_types",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 ai_research_types (第7行)"
    },
    {
      "source": "mod.rs",
      "target": "ai_documentation_types",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/mod.rs 通过 mod 语句依赖于 ai_documentation_types (第8行)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/documentation_extractor.rs 通过 use 语句依赖于 crate::cache::CacheManager (第4行)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/documentation_extractor.rs 通过 use 语句依赖于 crate::agents::preprocessing_agent::PreprocessingResult (第5行)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::extractors::research_extractor::ResearchReport",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/documentation_extractor.rs 通过 use 语句依赖于 crate::extractors::research_extractor::ResearchReport (第6行)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/documentation_extractor.rs 通过 use 语句依赖于 crate::utils::MarkdownUtils (第7行)"
    },
    {
      "source": "typescript.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/typescript.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "java.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/java.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "react.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/react.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "mod.rs",
      "target": "rust",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 rust (第95行)"
    },
    {
      "source": "mod.rs",
      "target": "javascript",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 javascript (第96行)"
    },
    {
      "source": "mod.rs",
      "target": "typescript",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 typescript (第97行)"
    },
    {
      "source": "mod.rs",
      "target": "react",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 react (第98行)"
    },
    {
      "source": "mod.rs",
      "target": "vue",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 vue (第99行)"
    },
    {
      "source": "mod.rs",
      "target": "svelte",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 svelte (第100行)"
    },
    {
      "source": "mod.rs",
      "target": "kotlin",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 kotlin (第101行)"
    },
    {
      "source": "mod.rs",
      "target": "python",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 python (第102行)"
    },
    {
      "source": "mod.rs",
      "target": "java",
      "relationship_type": "code_mod",
      "strength": 0.9,
      "description": "src/extractors/language_processors/mod.rs 通过 mod 语句依赖于 java (第103行)"
    },
    {
      "source": "rust.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/rust.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "vue.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/vue.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "javascript.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/javascript.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "kotlin.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/kotlin.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "python.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/python.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "svelte.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/language_processors/svelte.rs 通过 use 语句依赖于 super::{Dependency, LanguageProcessor} (第1行)"
    },
    {
      "source": "structure_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/structure_extractor.rs 通过 use 语句依赖于 crate::cache::CacheManager (第9行)"
    },
    {
      "source": "structure_extractor.rs",
      "target": "crate::extractors::language_processors::LanguageProcessorManager",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/extractors/structure_extractor.rs 通过 use 语句依赖于 crate::extractors::language_processors::LanguageProcessorManager (第10行)"
    },
    {
      "source": "cli.rs",
      "target": "crate::config::Config",
      "relationship_type": "code_use",
      "strength": 0.9,
      "description": "src/cli.rs 通过 use 语句依赖于 crate::config::Config (第1行)"
    },
    {
      "source": "architecture_detector.rs",
      "target": "file_explorer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "architecture_detector.rs 与 file_explorer.rs 在同一模块中协作"
    },
    {
      "source": "architecture_detector.rs",
      "target": "dependency_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "architecture_detector.rs 与 dependency_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "architecture_detector.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "architecture_detector.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "architecture_detector.rs",
      "target": "code_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "architecture_detector.rs 与 code_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "file_explorer.rs",
      "target": "architecture_detector.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_explorer.rs 与 architecture_detector.rs 在同一模块中协作"
    },
    {
      "source": "file_explorer.rs",
      "target": "dependency_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_explorer.rs 与 dependency_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "file_explorer.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_explorer.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "file_explorer.rs",
      "target": "code_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_explorer.rs 与 code_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "dependency_analyzer.rs",
      "target": "architecture_detector.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "dependency_analyzer.rs 与 architecture_detector.rs 在同一模块中协作"
    },
    {
      "source": "dependency_analyzer.rs",
      "target": "file_explorer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "dependency_analyzer.rs 与 file_explorer.rs 在同一模块中协作"
    },
    {
      "source": "dependency_analyzer.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "dependency_analyzer.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "dependency_analyzer.rs",
      "target": "code_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "dependency_analyzer.rs 与 code_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "architecture_detector.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 architecture_detector.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "file_explorer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 file_explorer.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "dependency_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 dependency_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "code_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 code_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "code_analyzer.rs",
      "target": "architecture_detector.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "code_analyzer.rs 与 architecture_detector.rs 在同一模块中协作"
    },
    {
      "source": "code_analyzer.rs",
      "target": "file_explorer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "code_analyzer.rs 与 file_explorer.rs 在同一模块中协作"
    },
    {
      "source": "code_analyzer.rs",
      "target": "dependency_analyzer.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "code_analyzer.rs 与 dependency_analyzer.rs 在同一模块中协作"
    },
    {
      "source": "code_analyzer.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "code_analyzer.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "types.rs",
      "target": "client.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "types.rs 与 client.rs 在同一模块中协作"
    },
    {
      "source": "types.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "types.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "client.rs",
      "target": "types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "client.rs 与 types.rs 在同一模块中协作"
    },
    {
      "source": "client.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "client.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 types.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "client.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 client.rs 在同一模块中协作"
    },
    {
      "source": "config.rs",
      "target": "lib.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "config.rs 与 lib.rs 在同一模块中协作"
    },
    {
      "source": "config.rs",
      "target": "main.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "config.rs 与 main.rs 在同一模块中协作"
    },
    {
      "source": "config.rs",
      "target": "cli.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "config.rs 与 cli.rs 在同一模块中协作"
    },
    {
      "source": "lib.rs",
      "target": "config.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "lib.rs 与 config.rs 在同一模块中协作"
    },
    {
      "source": "lib.rs",
      "target": "main.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "lib.rs 与 main.rs 在同一模块中协作"
    },
    {
      "source": "lib.rs",
      "target": "cli.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "lib.rs 与 cli.rs 在同一模块中协作"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "preprocessing_agent.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "research_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "preprocessing_agent.rs 与 research_agent.rs 在同一模块中协作"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "documentation_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "preprocessing_agent.rs 与 documentation_agent.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "preprocessing_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 preprocessing_agent.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "research_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 research_agent.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "documentation_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 documentation_agent.rs 在同一模块中协作"
    },
    {
      "source": "research_agent.rs",
      "target": "preprocessing_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_agent.rs 与 preprocessing_agent.rs 在同一模块中协作"
    },
    {
      "source": "research_agent.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_agent.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "research_agent.rs",
      "target": "documentation_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_agent.rs 与 documentation_agent.rs 在同一模块中协作"
    },
    {
      "source": "documentation_agent.rs",
      "target": "preprocessing_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_agent.rs 与 preprocessing_agent.rs 在同一模块中协作"
    },
    {
      "source": "documentation_agent.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_agent.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "documentation_agent.rs",
      "target": "research_agent.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_agent.rs 与 research_agent.rs 在同一模块中协作"
    },
    {
      "source": "text_utils.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "text_utils.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "text_utils.rs",
      "target": "file_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "text_utils.rs 与 file_utils.rs 在同一模块中协作"
    },
    {
      "source": "text_utils.rs",
      "target": "markdown_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "text_utils.rs 与 markdown_utils.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "text_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 text_utils.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "file_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 file_utils.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "markdown_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 markdown_utils.rs 在同一模块中协作"
    },
    {
      "source": "file_utils.rs",
      "target": "text_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_utils.rs 与 text_utils.rs 在同一模块中协作"
    },
    {
      "source": "file_utils.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_utils.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "file_utils.rs",
      "target": "markdown_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "file_utils.rs 与 markdown_utils.rs 在同一模块中协作"
    },
    {
      "source": "markdown_utils.rs",
      "target": "text_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "markdown_utils.rs 与 text_utils.rs 在同一模块中协作"
    },
    {
      "source": "markdown_utils.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "markdown_utils.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "markdown_utils.rs",
      "target": "file_utils.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "markdown_utils.rs 与 file_utils.rs 在同一模块中协作"
    },
    {
      "source": "main.rs",
      "target": "config.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "main.rs 与 config.rs 在同一模块中协作"
    },
    {
      "source": "main.rs",
      "target": "lib.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "main.rs 与 lib.rs 在同一模块中协作"
    },
    {
      "source": "main.rs",
      "target": "cli.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "main.rs 与 cli.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "component_extractor.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "component_extractor.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_analysis_types.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_analysis_types.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_research_types.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_research_types.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "research_extractor.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "research_extractor.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "documentation_extractor.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "typescript.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "typescript.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "java.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "java.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "react.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "react.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "mod.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "mod.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "rust.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "rust.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "vue.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "vue.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "javascript.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "javascript.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "kotlin.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "kotlin.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "python.rs",
      "target": "svelte.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "python.rs 与 svelte.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "typescript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 typescript.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "java.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 java.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "react.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 react.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "rust.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 rust.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "vue.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 vue.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "javascript.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 javascript.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "kotlin.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 kotlin.rs 在同一模块中协作"
    },
    {
      "source": "svelte.rs",
      "target": "python.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "svelte.rs 与 python.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "ai_documentation_types.rs",
      "target": "structure_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "ai_documentation_types.rs 与 structure_extractor.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "component_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 component_extractor.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "ai_analysis_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 ai_analysis_types.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "ai_research_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 ai_research_types.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "research_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 research_extractor.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "mod.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 mod.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "documentation_extractor.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 documentation_extractor.rs 在同一模块中协作"
    },
    {
      "source": "structure_extractor.rs",
      "target": "ai_documentation_types.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "structure_extractor.rs 与 ai_documentation_types.rs 在同一模块中协作"
    },
    {
      "source": "cli.rs",
      "target": "config.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "cli.rs 与 config.rs 在同一模块中协作"
    },
    {
      "source": "cli.rs",
      "target": "lib.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "cli.rs 与 lib.rs 在同一模块中协作"
    },
    {
      "source": "cli.rs",
      "target": "main.rs",
      "relationship_type": "collaboration",
      "strength": 0.6,
      "description": "cli.rs 与 main.rs 在同一模块中协作"
    },
    {
      "source": "file_explorer.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: file_explorer.rs 使用了 crate::config::Config (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "file_explorer",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 file_explorer (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "code_analyzer",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 code_analyzer (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "dependency_analyzer",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 dependency_analyzer (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "architecture_detector",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 architecture_detector (强度: 5/10)"
    },
    {
      "source": "client.rs",
      "target": "crate::config::LLMConfig",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: client.rs 使用了 crate::config::LLMConfig (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "client",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 client (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "types",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 types (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "crate::config::CacheConfig",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: mod.rs 使用了 crate::config::CacheConfig (强度: 7/10)"
    },
    {
      "source": "lib.rs",
      "target": "config",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 config (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "cli",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 cli (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "agents",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 agents (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "tools",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 tools (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "cache",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 cache (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "extractors",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 extractors (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "workflow",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 workflow (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "utils",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 utils (强度: 5/10)"
    },
    {
      "source": "lib.rs",
      "target": "llm",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: lib.rs 聚合了 llm (强度: 5/10)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: preprocessing_agent.rs 使用了 crate::llm::LLMClient (强度: 7/10)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: preprocessing_agent.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "preprocessing_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: preprocessing_agent.rs 使用了 crate::config::Config (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "preprocessing_agent",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 preprocessing_agent (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "research_agent",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 research_agent (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "documentation_agent",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 documentation_agent (强度: 5/10)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_agent.rs 使用了 crate::llm::LLMClient (强度: 7/10)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_agent.rs 使用了 crate::agents::preprocessing_agent::PreprocessingResult (强度: 7/10)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_agent.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_agent.rs 使用了 crate::config::Config (强度: 7/10)"
    },
    {
      "source": "research_agent.rs",
      "target": "crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_agent.rs 使用了 crate::extractors::{ResearchExtractor, ResearchReport, AIResearchEnhancement, AIComprehensiveInsights, AIRecommendations} (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::llm::LLMClient",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::llm::LLMClient (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::config::Config (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::agents::{preprocessing_agent::PreprocessingResult, research_agent::ResearchResult} (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::extractors::{DocumentationExtractor, C4Documentation, AIDocumentEnhancement, AITechnicalSpecification, AITestingGuide, AIPerformanceAnalysis, AISecurityAnalysis} (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::FileUtils",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::utils::FileUtils (强度: 7/10)"
    },
    {
      "source": "documentation_agent.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_agent.rs 使用了 crate::utils::MarkdownUtils (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "file_utils",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 file_utils (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "text_utils",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 text_utils (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "markdown_utils",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 markdown_utils (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: mod.rs 使用了 crate::agents::{PreprocessingAgent, ResearchAgent, DocumentationAgent} (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::research_agent::ResearchResult",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: mod.rs 使用了 crate::agents::research_agent::ResearchResult (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "crate::agents::documentation_agent::DocumentationResult",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: mod.rs 使用了 crate::agents::documentation_agent::DocumentationResult (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: mod.rs 使用了 crate::config::Config (强度: 7/10)"
    },
    {
      "source": "main.rs",
      "target": "agents",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 agents (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "cache",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 cache (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "cli",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 cli (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "config",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 config (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "extractors",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 extractors (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "llm",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 llm (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "tools",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 tools (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "utils",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 utils (强度: 5/10)"
    },
    {
      "source": "main.rs",
      "target": "workflow",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: main.rs 聚合了 workflow (强度: 5/10)"
    },
    {
      "source": "component_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: component_extractor.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "component_extractor.rs",
      "target": "crate::extractors::structure_extractor::{CoreComponent, ProjectStructure}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: component_extractor.rs 使用了 crate::extractors::structure_extractor::{CoreComponent, ProjectStructure} (强度: 7/10)"
    },
    {
      "source": "research_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_extractor.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "research_extractor.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: research_extractor.rs 使用了 crate::agents::preprocessing_agent::PreprocessingResult (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "structure_extractor",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 structure_extractor (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "component_extractor",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 component_extractor (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "research_extractor",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 research_extractor (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "documentation_extractor",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 documentation_extractor (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "language_processors",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 language_processors (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "ai_analysis_types",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 ai_analysis_types (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "ai_research_types",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 ai_research_types (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "ai_documentation_types",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 ai_documentation_types (强度: 5/10)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_extractor.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::agents::preprocessing_agent::PreprocessingResult",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_extractor.rs 使用了 crate::agents::preprocessing_agent::PreprocessingResult (强度: 7/10)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::extractors::research_extractor::ResearchReport",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_extractor.rs 使用了 crate::extractors::research_extractor::ResearchReport (强度: 7/10)"
    },
    {
      "source": "documentation_extractor.rs",
      "target": "crate::utils::MarkdownUtils",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: documentation_extractor.rs 使用了 crate::utils::MarkdownUtils (强度: 7/10)"
    },
    {
      "source": "typescript.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: typescript.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "java.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: java.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "react.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: react.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "mod.rs",
      "target": "rust",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 rust (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "javascript",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 javascript (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "typescript",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 typescript (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "react",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 react (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "vue",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 vue (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "svelte",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 svelte (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "kotlin",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 kotlin (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "python",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 python (强度: 5/10)"
    },
    {
      "source": "mod.rs",
      "target": "java",
      "relationship_type": "ai_聚合",
      "strength": 0.5,
      "description": "AI分析: mod.rs 聚合了 java (强度: 5/10)"
    },
    {
      "source": "rust.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: rust.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "vue.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: vue.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "javascript.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: javascript.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "kotlin.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: kotlin.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "python.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: python.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "svelte.rs",
      "target": "super::{Dependency, LanguageProcessor}",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: svelte.rs 使用了 super::{Dependency, LanguageProcessor} (强度: 7/10)"
    },
    {
      "source": "structure_extractor.rs",
      "target": "crate::cache::CacheManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: structure_extractor.rs 使用了 crate::cache::CacheManager (强度: 7/10)"
    },
    {
      "source": "structure_extractor.rs",
      "target": "crate::extractors::language_processors::LanguageProcessorManager",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: structure_extractor.rs 使用了 crate::extractors::language_processors::LanguageProcessorManager (强度: 7/10)"
    },
    {
      "source": "cli.rs",
      "target": "crate::config::Config",
      "relationship_type": "ai_依赖",
      "strength": 0.7,
      "description": "AI分析: cli.rs 使用了 crate::config::Config (强度: 7/10)"
    }
  ],
  "architecture_insights": [
    "识别的架构模式: 模块化架构, 分层架构",
    "单一职责原则: 遵循程度 8/10 - 大多数组件看起来遵循单一职责原则，每个组件有明确的职责范围。例如，architecture_detector.rs专注于架构检测，file_explorer.rs专注于文件探索。",
    "开闭原则: 遵循程度 7/10 - 项目展示了良好的扩展性，特别是通过模块化设计。新功能可以通过添加新模块或扩展现有模块来实现，而不需要修改现有代码。",
    "依赖倒置原则: 遵循程度 6/10 - 项目中有一些依赖关系直接指向具体实现，可以考虑通过接口或抽象来减少直接依赖。",
    "架构优势: 模块化设计使得系统易于维护和扩展",
    "架构优势: 清晰的分层结构促进了代码的组织和管理",
    "架构优势: 专注于单一职责的组件设计",
    "架构关注点: 某些组件可能承担过多职责，需要进一步拆分",
    "架构关注点: 直接依赖具体实现可能影响系统的灵活性",
    "架构关注点: 缺乏明确的接口或抽象层可能增加未来的修改成本",
    "架构建议: 考虑引入更多的接口或抽象层来减少直接依赖",
    "架构建议: 评估组件的职责边界，确保每个组件只负责单一功能",
    "架构建议: 建立更清晰的模块化边界，确保模块之间的耦合度降低",
    "架构建议: 考虑引入设计模式（如工厂模式、策略模式）来增强系统的灵活性和可扩展性"
  ],
  "processing_time": 273.883840708,
  "summary": "项目预处理摘要:\n\n📊 整体评估:\n该项目是一个中等规模的Rust项目，主要使用Rust语言开发，包含40个核心组件和56个文件。项目的平均代码质量较高，为0.81/1.0。项目中存在一些质量问题，主要涉及AI分析、代码规模、复杂度和文档不足等方面。\n\n🏗️ 架构成熟度: 7/10\n💎 代码质量: 8/10\n\n🎯 技术栈分析:\n该项目主要使用Rust语言开发，技术栈单一，适用于需要高性能和安全性的应用场景。\n\n💪 项目优势:\n- 代码质量较高\n- 核心组件明确\n- 重要性较高的组件有较好的代码质量\n\n⚠️ 主要挑战:\n- 代码复杂度较高\n- 错误处理不够细化\n- 函数参数过多\n- 测试覆盖率不足\n- 缺乏全面的文档注释\n- 错误处理不够一致\n- 性能瓶颈\n\n🚀 优先改进建议:\n- 将复杂函数拆分为更小的函数以降低圈复杂度\n- 增强错误处理的细化程度\n- 考虑使用结构体封装参数以减少函数参数数量\n- 添加更多的单元测试和集成测试\n- 增加更全面的文档注释\n\n📈 发展建议:\n- 将复杂函数拆分为更小的函数以降低圈复杂度\n- 增强错误处理的细化程度\n- 考虑使用结构体封装参数以减少函数参数数量\n- 添加更多的单元测试和集成测试\n- 考虑添加日志功能以便于调试和监控\n- 将大函数拆分为更小的函数\n- 增加更全面的文档注释\n- 实现更一致的错误处理\n- 考虑添加并行处理以提高性能\n- 添加更多测试用例"
}